{"meta":{"title":"By0B","subtitle":"烦恼会飞","description":"by0b","author":"腰静","url":"https://by0b.com"},"pages":[{"title":"books","date":"2018-12-18T04:50:48.000Z","updated":"2018-12-18T04:50:48.900Z","comments":true,"path":"books/index.html","permalink":"https://by0b.com/books/index.html","excerpt":"","text":""},{"title":"about","date":"2018-12-08T09:15:50.000Z","updated":"2019-02-09T17:07:04.017Z","comments":true,"path":"about/index.html","permalink":"https://by0b.com/about/index.html","excerpt":"","text":"内容 旨在基础知识的积累； 旨在进阶知识的积累； 不成系列；专业知识 编程语言：熟悉Java 工作：「Java Web（微服务架构）开发（前后端）」 技能：Java Web开发、Android 应用层App开发； 学习：正在学习iOS和信息安全；愿景 精通基础、掌握进阶； 不成系列，点对点总结； 全栈开发者； 信息安全入门小白；联系方式 邮箱：2binarytree艾特gmail.com"},{"title":"categories","date":"2018-12-08T09:13:33.000Z","updated":"2018-12-08T09:15:36.517Z","comments":true,"path":"categories/index.html","permalink":"https://by0b.com/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2018-12-29T06:11:59.000Z","updated":"2018-12-29T06:11:59.735Z","comments":true,"path":"friends/index.html","permalink":"https://by0b.com/friends/index.html","excerpt":"","text":""},{"title":"links","date":"2018-12-18T04:50:25.000Z","updated":"2018-12-18T04:50:25.727Z","comments":true,"path":"links/index.html","permalink":"https://by0b.com/links/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-08T09:14:33.000Z","updated":"2018-12-08T09:15:15.414Z","comments":true,"path":"tags/index.html","permalink":"https://by0b.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"MySQL常见问题及优化","slug":"mysql-comtimization","date":"2019-01-26T03:35:45.000Z","updated":"2019-02-09T18:07:27.485Z","comments":true,"path":"2019/01/26/mysql-comtimization/","link":"","permalink":"https://by0b.com/2019/01/26/mysql-comtimization/","excerpt":"MySQL的优化方案有哪一些？本文介绍一下优化SQL语句和优化索引。 本文记录MySQL 本文梗概如下: 优化SQL 优化索引 开启查询缓存","text":"MySQL的优化方案有哪一些？本文介绍一下优化SQL语句和优化索引。 本文记录MySQL 本文梗概如下: 优化SQL 优化索引 开启查询缓存 配合使用Redis MySQL主从复制 优化MySQL自带的分区表 垂直拆分,分解大系统,成为小系统,分布式系统 水平拆分 硬件上的升级、存储引擎、MySQL本身的配置文件 （一）优化SQL1、通过MySQL自有的优化语句优化SQL语句，通过脚本命令来了解执行率较低的语句，显示一下状态等。 SHOW命令 SHOW Status可以了解SQL的执行频率。可以显示日志，显示特定的数据库、表、索引以及进程还有权限表中的信息等等。介绍一些常见的字段 Innodb_rows_read:Select查询返回的行数。 Innodb_rows_inserted:执行INSERT操作插入的行数。 Innodb_rows_updated:执行UPDATE操作更新的行数。 Innodb_rows_deleted:执行DELETE操作删除的行数。","categories":[],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://by0b.com/tags/MySQL/"}]},{"title":"MyBatis语法总结","slug":"mybatis-exc","date":"2019-01-02T10:09:31.000Z","updated":"2019-01-03T05:58:37.774Z","comments":true,"path":"2019/01/02/mybatis-exc/","link":"","permalink":"https://by0b.com/2019/01/02/mybatis-exc/","excerpt":"背景 MyBatis在一些情况下，与在MySQL里面直接查询两者的运行情况（此处无关结果集）不一定是一样的，有些语句在MyBatis中运行是报错的。","text":"背景 MyBatis在一些情况下，与在MySQL里面直接查询两者的运行情况（此处无关结果集）不一定是一样的，有些语句在MyBatis中运行是报错的。 MyBatis中的标签","categories":[],"tags":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://by0b.com/tags/MyBatis/"}]},{"title":"Vue.js生命周期理解","slug":"vue-life-cycle","date":"2019-01-02T07:51:25.000Z","updated":"2019-01-02T10:10:13.830Z","comments":true,"path":"2019/01/02/vue-life-cycle/","link":"","permalink":"https://by0b.com/2019/01/02/vue-life-cycle/","excerpt":"","text":"","categories":[],"tags":[{"name":"Vue.js","slug":"Vue-js","permalink":"https://by0b.com/tags/Vue-js/"}]},{"title":"前端后端数据交互过程例解与调试","slug":"debugger-skills","date":"2018-12-29T06:53:48.000Z","updated":"2019-01-03T05:58:08.294Z","comments":true,"path":"2018/12/29/debugger-skills/","link":"","permalink":"https://by0b.com/2018/12/29/debugger-skills/","excerpt":"背景前后端分离项目进行数据交互的时候，出现错误改如何快速定位调试。","text":"背景前后端分离项目进行数据交互的时候，出现错误改如何快速定位调试。 前后交互数据的过程","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"https://by0b.com/tags/技术/"}]},{"title":"方案解决与思路提示","slug":"issues-reminders","date":"2018-12-25T12:08:43.000Z","updated":"2019-01-26T13:11:13.495Z","comments":true,"path":"2018/12/25/issues-reminders/","link":"","permalink":"https://by0b.com/2018/12/25/issues-reminders/","excerpt":"背景旨在积累一些问题的解决方案和思路，下次出现快速解决。少走弯路；提高效率。","text":"背景旨在积累一些问题的解决方案和思路，下次出现快速解决。少走弯路；提高效率。 微服务分机部署 分机部署，如果是不同服务商的服务器，加载速度会变得很慢。可以使用CDN加速。即使是同一个运营商不同地域的，也会这样。 记得开放端口和设置安全组规则（比如阿里云的），想当于设置白名单。 微服务的占用性能比较大，如果在出现线程被自动kill的现象，要即使查看是不是内存不足导致，从而出发了kill最大内存的进程。 整理自己的资料 学会使用标签。 Notes是个好东西。 之后每份重要的文件都要放上标签，便于查找。 自己的资料库要形成索引。","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"https://by0b.com/tags/技术/"}]},{"title":"后端开发之微服务开发遇到的问题和总结","slug":"server-spring-cloud-qa-and-summary","date":"2018-12-19T00:26:48.000Z","updated":"2019-01-03T05:58:41.142Z","comments":true,"path":"2018/12/19/server-spring-cloud-qa-and-summary/","link":"","permalink":"https://by0b.com/2018/12/19/server-spring-cloud-qa-and-summary/","excerpt":"背景微服务开发中基础知识整理和技巧整理。","text":"背景微服务开发中基础知识整理和技巧整理。 生日跨年查询代码：123456789101112131415161718192021222324252627282930313233343536&lt;select id=\"selectByBirthday\" parameterType=\"com.security.common.entity.PageExample\" resultMap=\"BaseResultMap\"&gt; select a.* from ( SELECT t.*, y.position_name FROM m_employee_info t LEFT JOIN m_position y ON t.position_id = y.position_id WHERE t.employee_id IS NOT NULL &lt;if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\"&gt; AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #&#123;data.startDataBirthdayPoint&#125; AND #&#123;data.endDataBirthdayPoint&#125; &lt;/if&gt; UNION ALL SELECT t.*, y.position_name FROM m_employee_info t LEFT JOIN m_position y ON t.position_id = y.position_id WHERE t.employee_id IS NOT NULL &lt;if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\"&gt; AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #&#123;data.startDataBirthdayPoint&#125; AND '1231' &lt;/if&gt; UNION ALL SELECT t.*, y.position_name FROM m_employee_info t LEFT JOIN m_position y ON t.position_id = y.position_id WHERE t.employee_id IS NOT NULL &lt;if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\"&gt; AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN '0101' AND #&#123;data.endDataBirthdayPoint&#125; &lt;/if&gt; ) as a&lt;/select&gt; 查询生日，将年份截取，只传入月和日。 在跨年处理的时候，需要将时间截断一下。开始的时间到1231，作为一个阶段，从0101到终止的时间，作为第二个阶段。 有第二种方法但是不推荐这样写12345678SELECT *FROM m_employee_info tWHERE(date_add(t.employee_birthday ,INTERVAL TIMESTAMPDIFF(YEAR ,t.employee_birthday ,DATE_FORMAT(now() , '%Y-%m-%d')) YEAR)) BETWEEN '2018-12-01' AND '2019-01-15'OR(date_add(t.employee_birthday ,INTERVAL TIMESTAMPDIFF(YEAR ,t.employee_birthday ,DATE_FORMAT(now() , '%Y-%m-%d'))+1 YEAR)) BETWEEN '2018-12-01' AND '2019-01-15' 上述代码使用Navicat的Beautify SQL功能美化整理 也能实现跨年查询，还需要另外加一部分 这样的问题是函数比较多，每次将所有的用户的生日全部改成查询起始时间点的所在年份，如果人多，性能会比较低。 MyBatis映射文件中的注意事项 ResultMap中子标签&lt;result/&gt;标签中的property和column对应字段必须所在的entity实体类中； 如果entity实体类中存在，但是没有写在ResultMap中，则不显示； &lt;if&gt;标签中存在if条件，如果外层关联过许多表的话，查询出的数据结果集可能会用重复，因此，限制条件必须要放到外层，而不是写在&lt;if&gt;标签中； 在Navicate中的union all语句是能够正确查询的，但是放到mapper映射文件中，需要加一层，select a.* from (...) a； MyBatis中不支持通常写法的大于号和小于号，这里需要转义：大于号：&amp;gt;，小于号：&amp;lt;；","categories":[],"tags":[{"name":"Spring Cloud","slug":"Spring-Cloud","permalink":"https://by0b.com/tags/Spring-Cloud/"}]},{"title":"前端开发Vue.js问题整理与总结","slug":"front-vue-js-qa-and-summary","date":"2018-12-18T05:37:16.000Z","updated":"2019-01-03T05:58:14.529Z","comments":true,"path":"2018/12/18/front-vue-js-qa-and-summary/","link":"","permalink":"https://by0b.com/2018/12/18/front-vue-js-qa-and-summary/","excerpt":"背景 所在的项目上前端开发使用技术栈为Vue.js。 本文的主要内容开发时候遇到的问题、解决的方案、常用的解决方法。 思路。","text":"背景 所在的项目上前端开发使用技术栈为Vue.js。 本文的主要内容开发时候遇到的问题、解决的方案、常用的解决方法。 思路。 测试代码高亮 123456789101112131415161718192021// 简单语法Vue.component('props-demo-simple', &#123; props: ['size', 'myMessage']&#125;)// 对象语法，提供校验Vue.component('props-demo-advanced', &#123; props: &#123; // 检测类型 height: Number, // 检测类型 + 其他验证 age: &#123; type: Number, default: 0, required: true, validator: function (value) &#123; return value &gt;= 0 &#125; &#125; &#125;&#125;) 组件弹窗 原因:主要原因是没理解弹窗的原理。写的时候没有按照步骤和关键点进行。 JavaScript数据结构 对JavaScript数组的理解不熟悉。 对返回的数据做不出明确的判断来。 组件通信数据绑定","categories":[],"tags":[{"name":"Vue.js","slug":"Vue-js","permalink":"https://by0b.com/tags/Vue-js/"}]},{"title":"微服务模块的理解","slug":"micro-service","date":"2018-12-17T06:16:51.000Z","updated":"2019-01-03T05:58:35.318Z","comments":true,"path":"2018/12/17/micro-service/","link":"","permalink":"https://by0b.com/2018/12/17/micro-service/","excerpt":"项目微服务结构整体理解背景 各司其职、集中管理、存在单向或多向调用关系；","text":"项目微服务结构整体理解背景 各司其职、集中管理、存在单向或多向调用关系； 意义 提高迭代效率； 降低开发黏连性； 节约成本 实现结构项目启动的入口CenterBootstrap 各项服务的注册、管理中心。 微服务请求转发。鉴权（权限）服务AuthBootstrap JWT处理权限字典服务DictBootstrap 管理项目的数据字典。后台管理服务AdminBootstrap 连接数据库、处理数据。网关服务GateBootstrap 接收前端的请求并转发至其他服务。","categories":[],"tags":[{"name":"微服务","slug":"微服务","permalink":"https://by0b.com/tags/微服务/"}]},{"title":"iOS开发基础之学习Objective-C笔记一","slug":"ios-init-oc-lang","date":"2018-12-11T13:11:22.000Z","updated":"2019-01-03T05:58:26.454Z","comments":true,"path":"2018/12/11/ios-init-oc-lang/","link":"","permalink":"https://by0b.com/2018/12/11/ios-init-oc-lang/","excerpt":"前言","text":"前言 背景 学习一门新的手艺。 做个小的Demo，解决自己对于现有的某些工具不能满足自己需求的痛点。 Apple Store一些应用需要花钱。 计划 第一、先看书。重点关注一下指针这块。 第二、照着实例写一写UI。画一画界面。 第三、写一写后台的逻辑。实现一些小的功能。 第四、整合记录一下笔记和发布一下源码。提升一下。 第五、规划一个tools的功能，写计划书，准备开发。","categories":[],"tags":[{"name":"Objective-C","slug":"Objective-C","permalink":"https://by0b.com/tags/Objective-C/"}]}]}