[{"title":"使用Bash Shell实现自定义信息修改flowable工作流引擎war包配置","url":"/2020/02/17/2eeba61b-ff4b-4166-ae26-ee61b6002724/","content":"<!-- more -->\n# 1、概要\n部署开发与生产环境，有用到flowable工作流的地方，每次部署，需要修改war包里面的配置，最多的就是引擎的地址和数据库的地址、端口，账密等信息。次数多了，修改这些体力活。\n\n使用shell改进这个工作。\n### 1.1、思路\n* 获得flowable的release包 && 解压 && 进入解压的文件夹 && 进入war包所在位置；\n* 解压war包 && 删除原来的配置文件 && 创建新的配置文件；\n* 提示用户输入信息(不输入会有默认并提示) && 最后确认； \n* 如果有问题，则输入n，并输入相对应的需要进行修正；\n* 如果正确，则输入y，将用户输入的信息写入配置文件 && 打包war包；\n* 结束\n\n# 2、使用与实现\n我下载的flowable-6.3.0.zip，在使用的时候，保证脚本与这个压缩包在同一目录下即可。\n\n```shell\n\n#!/usr/bin/env bash\n# https://youxiu.net/\n\n# Semi-automated deployment flowable\n# 2020.01.31\n# This script needs to be in the same parent directory as the folder\n# This script needs to be in the same parent directory as the folder\n# This script needs to be in the same parent directory as the folder\n# This script needs to be in the same parent directory as the folder\n\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\nexport PATH\n\n# define a group color\nred='\\033[0;31m'\ngreen='\\033[0;32m'\nyellow='\\033[0;33m'\nplain='\\033[0m'\n\n# by root\n[[ $EUID -ne 0 ]] && echo -e \"[${red}Error${plain}] This script must be run as root!\" && exit 1\n\n# I get a compressed package\n\nCURDIR=$(\n\tcd $(dirname ${BASH_SOURCE[0]})\n\tpwd\n)\n\nrm -rf flowable-6.3.0\nunzip flowable-6.3.0.zip\n\ncd $CURDIR/flowable-6.3.0\n\necho \"Go into the folder and create a folder\"\ncd wars\nmkdir flowable-admin && mv flowable-admin.war flowable-admin\nmkdir flowable-idm && mv flowable-idm.war flowable-idm\nmkdir flowable-modeler && mv flowable-modeler.war flowable-modeler\nmkdir flowable-rest && mv flowable-rest.war flowable-rest\nmkdir flowable-task && mv flowable-task.war flowable-task\n\necho \"Folder created and processed successfully\"\ncd flowable-admin && jar -xvf flowable-admin.war\necho \"flowable-admin.war unzip successfully\"\n\n# come back\ncd ..\n\ncd flowable-idm && jar -xvf flowable-idm.war\necho \"flowable-idm.war unzip successfully\"\n\n# come back\ncd ..\n\ncd flowable-modeler && jar -xvf flowable-modeler.war\necho \"flowable-modeler.war unzip successfully\"\n\n# come back\ncd ..\n\ncd flowable-rest && jar -xvf flowable-rest.war\necho \"flowable-rest.war unzip successfully\"\n\n# come back\ncd ..\n\ncd flowable-task && jar -xvf flowable-task.war\necho \"flowable-task.war unzip successfully\"\n\n# back to ../wars/\ncd ..\n\n: <<!\nAs the custom properties in the application.properties file cannot be controlled, \nthe processing method here is to delete the original file, \ncreate a new file, \nand obtain the necessary properties from the user input.\n!\n\n# current dir2\n# CURDIR2=$(cd $(dirname ${BASH_SOURCE[0]}); pwd )\n\n# echo $CURDIR2\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#---------------------------------------------------------------------------------------flowable-admin-----------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n# have an application.properties\n#\n#\ncd flowable-admin/WEB-INF/classes\nrm -rf application.properties\ntouch application1.properties\n\necho -n \"[1]please input the server.port = ? (default is 9988)\"\nread port\nif [[ $port == \"\" ]]; then\n\tport='9988'\nfi\n\necho -n \"your server.port is $port\"\n\necho -n \"[2]please input the context-path = ? (default is /flowable-admin)\"\nread contextPath\nif [[ $contextPath == \"\" ]]; then\n\tcontextPath='/flowable-admin'\nfi\n\necho -n \"[3]please input the jmx.unique-names = ? (default is true)\"\nread jmxUniqueNames\nif [[ $jmxUniqueNames == \"\" ]]; then\n\tjmxUniqueNames='true'\nfi\n\necho -n \"[4]please input the proxy-target-class = ? (default is true)\"\nread proxyTargetClass\nif [[ $proxyTargetClass ]]; then\n\tproxyTargetClass='true'\nfi\n\necho -n \"[5]please input the spring.aop.auto = ? (default is true)\"\nread auto\nif [[ $auto == \"\" ]]; then\n\tauto='true'\nfi\n\necho -n \"[6]please input the spring.application.name = ? (default is flowable-ui-admin)\"\nread applicationName\nif [[ $applicationName == \"\" ]]; then\n\tapplicationName='flowable-ui-admin'\nfi\n\necho -n \"[7]please input the liquibase.enabled = ? (default is false!!!)\"\nread liquibaseEnabled\nif [[ $liquibaseEnabled == \"\" ]]; then\n\tliquibaseEnabled='false'\nfi\n\necho -n \"[8]please input the servlet.multipart.max-file-size = ? (default is 10MB)\"\nread multipartMaxFileSize\nif [[ $multipartMaxFileSize == \"\" ]]; then\n\tmultipartMaxFileSize='10MB'\nfi\n\necho -n \"[9]please input the spring.banner.location = ? (default is classpath:/org/flowable/spring/boot/flowable-banner.txt)\"\nread bannerLocation\nif [[ $bannerLocation == \"\" ]]; then\n\tbannerLocation='classpath:/org/flowable/spring/boot/flowable-banner.txt'\nfi\n\necho -n \"[10]please input the management.endpoints.web.exposure.include = ? (default is *)\"\nread webExposureInclude\nif [[ $webExposureInclude == \"\" ]]; then\n\twebExposureInclude='*'\nfi\n\necho -n \"[11]please input the management.endpoint.health.show-details = ? (default is when_authorized) \"\nread healthShowDeails\nif [[ $healthShowDeails == \"\" ]]; then\n\thealthShowDeails='when_authorized'\nfi\n\necho -n \"[12]please input management.endpoint.health.roles = ? (default is access-admin)\"\nread healthRoles\nif [[ $healthRoles == \"\" ]]; then\n\thealthRoles='access-admin'\nfi\n\necho -n \"[13]please input the MySQL server host ip = ? (default is 127.0.0.1)\"\nread MySQLHostIp\nif [[ $MySQLHostIp == \"\" ]]; then\n\tMySQLHostIp='127.0.0.1'\nfi\n\necho -n \"[14]please input the MySQL server host port = ? (default is 3306)\"\nread MySQLHostPort\nif [[ $MySQLHostPort == \"\" ]]; then\n\tMySQLHostPort='3306'\nfi\n\necho -n \"[15]please input the MySQL database name = ? (default is flowable)\"\nread datasourceName\nif [[ $datasourceName == \"\" ]]; then\n\tdatasourceName='flowable'\nfi\n\necho -n \"[16]please input the MySQL database character encoding name = ? (default is UTF-8)\"\nread characterEncoding\nif [[ $characterEncoding == \"\" ]]; then\n\tcharacterEncoding='UTF-8'\nfi\n\necho -n \"[17]please input the spring.datasource.username = ? (default is root)\"\nread datasourceUsername\nif [[ $datasourceUsername == \"\" ]]; then\n\tdatasourceUsername='root'\nfi\n\necho -n \"[18]please input the spring.datasource.password = ? (default is 123456)\"\nread datasourcePassword\nif [[ $datasourcePassword == \"\" ]]; then\n\tdatasourcePassword='123456'\nfi\n\n# Process engine Info\n\necho -n \"[19]please input the server-config.process.name = ? (default is Flowable Process app)\"\nread processName\nif [[ $processName == \"\" ]]; then\n\tprocessName='Flowable Process app'\nfi\n\necho -n \"[20]please input the server-config.process.description = ? (default is Flowable Process REST config)\"\nread processDescription\nif [[ $processDescription == \"\" ]]; then\n\tprocessDescription='Flowable Process REST config'\nfi\n\necho -n \"[21]please input the server-config.process.server-address = ? (default is http://localhost)\"\nread processServerAddress\nif [[ $processServerAddress == \"\" ]]; then\n\tprocessServerAddress='http://localhost'\nfi\n\necho -n \"[22]please input the server-config.process.port = ? (default is 8080)\"\nread processPort\nif [[ $processPort == \"\" ]]; then\n\tprocessPort='8080'\nfi\n\necho -n \"[23]please input the server-config.process.context-root = ? (default is flowable-task)\"\nread processContextRoot\nif [[ $processContextRoot == \"\" ]]; then\n\tprocessContextRoot='flowable-task'\nfi\n\necho -n \"[24]please input the server-config.process.rest-root = ? (default is process-api)\"\nread processRestRoot\nif [[ $processRestRoot == \"\" ]]; then\n\tprocessRestRoot='process-api'\nfi\n\necho -n \"[25]please input the server-config.process.user-name = ? (default is admin)\"\nread processUserName\nif [[ $processUserName == \"\" ]]; then\n\tprocessUserName='admin'\nfi\n\necho -n \"[26]please input the server-config.process.password = ? (default is test)\"\nread processPassword\nif [[ $processPassword == \"\" ]]; then\n\tprocessPassword='test'\nfi\n\n# CMMN engine\n\necho -n \"[27]please input the server-config.cmmn.name = ? (default is Flowable CMMN app)\"\nread cmmnName\nif [[ $cmmnName == \"\" ]]; then\n\tcmmnName='Flowable CMMN app'\nfi\n\necho -n \"[28]please input the server-config.cmmn.description = ? (default is Flowable CMMN REST config)\"\nread cmmnDescription\nif [[ $cmmnDescription == \"\" ]]; then\n\tcmmnDescription='Flowable CMMN REST config'\nfi\n\necho -n \"[29]please input the server-config.cmmn.server-address = ? (default is http://localhost)\"\nread cmmnServerAddress\nif [[ $cmmnServerAddress == \"\" ]]; then\n\tcmmnServerAddress='http://localhost'\nfi\n\necho -n \"[30]please input the server-config.cmmn.port = ? (default is 8080)\"\nread cmmnPort\nif [[ $cmmnPort == \"\" ]]; then\n\tcmmnPort='8080'\nfi\n\necho -n \"[31]please input the server-config.cmmn.context-root = ? (default is flowable-task)\"\nread cmmnContextRoot\nif [[ $cmmnContextRoot == \"\" ]]; then\n\tcmmnContextRoot='flowable-task'\nfi\n\necho -n \"[32]please input the server-config.cmmn.rest-root = ? (default is cmmn-api)\"\nread cmmnRestRoot\nif [[ $cmmnRestRoot == \"\" ]]; then\n\tcmmnRestRoot='cmmn-api'\nfi\n\necho -n \"[33]please input the server-config.cmmn.user-name = ? (default is admin)\"\nread cmmnUserName\nif [[ $cmmnUserName == \"\" ]]; then\n\tcmmnUserName='admin'\nfi\n\necho -n \"[34]please input the server-config.cmmn.password = ? (default is test)\"\nread cmmnPassword\nif [[ $cmmnPassword == \"\" ]]; then\n\tcmmnPassword='test'\nfi\n\n# DMN engine\n\necho -n \"[35]please input the server-config.dmn.name = ? (default is Flowable DMN app)\"\nread dmnName\nif [[ $dmnName == \"\" ]]; then\n\tdmnName='Flowable DMN app'\nfi\n\necho -n \"[36]please input the server-config.dmn.description = ? (default is Flowable DMN REST config)\"\nread dmnDescription\nif [[ $dmnDescription == \"\" ]]; then\n\tdmnDescription='Flowable DMN REST config'\nfi\n\necho -n \"[37]please input the server-config.dmn.server-address = ? (default is http://localhost)\"\nread dmnServerAddress\nif [[ $dmnServerAddress == \"\" ]]; then\n\tdmnServerAddress='http://localhost'\nfi\n\necho -n \"[38]please input the server-config.dmn.port = ? (default is 8080)\"\nread dmnPort\nif [[ $dmnPort == \"\" ]]; then\n\tdmnPort='8080'\nfi\n\necho -n \"[39]please input the server-config.dmn.context-root = ? (default is flowable-task)\"\nread dmnContextRoot\nif [[ $dmnContextRoot == \"\" ]]; then\n\tdmnContextRoot='flowable-task'\nfi\n\necho -n \"[40]please input the server-config.dmn.rest-root = ? (default is dmn-api)\"\nread dmnRestRoot\nif [[ $dmnRestRoot == \"\" ]]; then\n\tdmnRestRoot='dmn-api'\nfi\n\necho -n \"[41]please input the server-config.dmn.user-name = ? (default is admin)\"\nread dmnUserName\nif [[ $dmnUserName == \"\" ]]; then\n\tdmnUserName='admin'\nfi\n\necho -n \"[42]please input the server-config.dmn.password = ? (default is test)\"\nread dmnPassword\nif [[ $dmnPassword == \"\" ]]; then\n\tdmnPassword='test'\nfi\n\n# Form engine\n\necho -n \"[43]please input the server-config.form.name = ? (default is Flowable Form app)\"\nread formName\nif [[ $formName == \"\" ]]; then\n\tformName='Flowable Form app'\nfi\n\necho -n \"[44]please input the server-config.form.description = ? (default is Flowable Form REST config)\"\nread formDescription\nif [[ $formDescription == \"\" ]]; then\n\tformDescription='Flowable Form REST config'\nfi\n\necho -n \"[45]please input the server-config.form.server-address = ? (default is http://localhost)\"\nread formServerAddress\nif [[ $formServerAddress == \"\" ]]; then\n\tformServerAddress='http://localhost'\nfi\n\necho -n \"[46]please input the server-config.form.port = ? (default is 8080)\"\nread formPort\nif [[ $formPort == \"\" ]]; then\n\tformPort='8080'\nfi\n\necho -n \"[47]please input the server-config.form.context-root = ? (default is flowable-task)\"\nread formContextRoot\nif [[ $formContextRoot == \"\" ]]; then\n\tformContextRoot='flowable-task'\nfi\n\necho -n \"[48]please input the server-config.form.rest-root = ? (default is form-api)\"\nread formRestRoot\nif [[ $formRestRoot == \"\" ]]; then\n\tformRestRoot='form-api'\nfi\n\necho -n \"[49]please input the server-config.form.user-name = ? (default is admin)\"\nread formUserName\nif [[ $formUserName == \"\" ]]; then\n\tformUserName='admin'\nfi\n\necho -n \"[50]please input the server-config.form.password = ? (default is test)\"\nread formPassword\nif [[ $formPassword == \"\" ]]; then\n\tformPassword='test'\nfi\n\n# Content engine\n\necho -n \"[51]please input the server-config.content.name = ? (default is Flowable Content app)\"\nread contentName\nif [[ $contentName == \"\" ]]; then\n\tcontentName='Flowable Content app'\nfi\n\necho -n \"[52]please input the server-config.content.description = ? (default is Flowable Content REST config)\"\nread contentDescription\nif [[ $contentDescription == \"\" ]]; then\n\tcontentDescription='Flowable Content REST config'\nfi\n\necho -n \"[53]please input the server-config.content.server-address = ? (default is http://localhost)\"\nread contentServerAddress\nif [[ $contentServerAddress == \"\" ]]; then\n\tcontentServerAddress='http://localhost'\nfi\n\necho -n \"[54]please input the server-config.content.port = ? (default is 8080)\"\nread contentPort\nif [[ $contentPort == \"\" ]]; then\n\tcontentPort='8080'\nfi\n\necho -n \"[55]please input the server-config.content.context-root = ? (default is flowable-task)\"\nread contentContextRoot\nif [[ $contentContextRoot == \"\" ]]; then\n\tcontentContextRoot='flowable-task'\nfi\n\necho -n \"[56]please input the server-config.content.rest-root = ? (default is content-api)\"\nread contentRestRoot\nif [[ $contentRestRoot == \"\" ]]; then\n\tcontentRestRoot='content-api'\nfi\n\necho -n \"[57]please input the server-config.content.user-name = ? (default is admin)\"\nread contentUserName\nif [[ $contentUserName == \"\" ]]; then\n\tcontentUserName='admin'\nfi\n\necho -n \"[58]please input the server-config.content.password = ? (default is test)\"\nread contentPassword\nif [[ $contentPassword == \"\" ]]; then\n\tcontentPassword='test'\nfi\n\n# IDM Info\n\necho -n \"[59]please input the flowable.common.app.idm-url.ip = ? (default is localhost)\"\nread appIdmUrlIp\nif [[ $appIdmUrlIp == \"\" ]]; then\n\tappIdmUrlIp='localhost'\nfi\n\necho -n \"[60]please input the flowable.common.app.idm-url.port = ? (default is 8080)\"\nread appIdmUrlPort\nif [[ $appIdmUrlPort == \"\" ]]; then\n\tappIdmUrlPort='8080'\nfi\n\necho -n \"[61]please input the flowable.common.app.idm-admin.user = ? (default is admin)\"\nread appIdmAdminUser\nif [[ $appIdmAdminUser == \"\" ]]; then\n\tappIdmAdminUser='admin'\nfi\n\necho -n \"[62]please input the flowable.common.app.idm-admin.password = ? (default is test)\"\nread appIdmAdminPassoword\nif [[ $appIdmAdminPassoword == \"\" ]]; then\n\tappIdmAdminPassoword='test'\nfi\n\necho -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\nread flag\nwhile [[ $flag == \"n\" ]]; do\n\techo 'input number 1 to 62'\n\techo 'your number is'\n\tread aNum\n\tcase $aNum in\n\t1)\n\t\techo 'number is 1, please fix your [port] current!'\n\t\tread line1\n\t\tport=$line1\n\t\t;;\n\t2)\n\t\techo 'number is 2, please fix your [context-path] current!'\n\t\tread line2\n\t\tcontextPath=$line2\n\t\t;;\n\t3)\n\t\techo 'number is 3, please fix your [jmx.unique-names] current!'\n\t\tread line3\n\t\tjmxUniqueNames=$line3\n\t\t;;\n\t4)\n\t\techo 'number is 4, please fix your [proxy-target-class] current!'\n\t\tread line4\n\t\tproxyTargetClass=$line4\n\t\t;;\n\t5)\n\t\techo 'number is 5, please fix your [spring.aop.auto] current!'\n\t\tread line5\n\t\tauto=$line5\n\t\t;;\n\t6)\n\t\techo 'number is 6, please fix your [spring.application.name] current!'\n\t\tread line6\n\t\tapplicationName=$line6\n\t\t;;\n\t7)\n\t\techo 'number is 7, please fix your [liquibase.enabled] current!'\n\t\tread line7\n\t\tliquibaseEnabled=$line7\n\t\t;;\n\t8)\n\t\techo 'number is 8, please fix your [servlet.multipart.max-file-size] current!'\n\t\tread line8\n\t\tmultipartMaxFileSize=$line8\n\t\t;;\n\t9)\n\t\techo 'number is 9, please fix your [spring.banner.location] current!'\n\t\tread line9\n\t\tbannerLocation=$line9\n\t\t;;\n\t10)\n\t\techo 'number is 10, please fix your [management.endpoints.web.exposure.include] current!'\n\t\tread line10\n\t\twebExposureInclude=$line10\n\t\t;;\n\t11)\n\t\techo 'number is 11, please fix your [management.endpoint.health.show-details] current!'\n\t\tread line11\n\t\thealthShowDeails=$line11\n\t\t;;\n\t12)\n\t\techo 'number is 12, please fix your [management.endpoint.health.roles] current!'\n\t\tread line12\n\t\thealthRoles=$line12\n\t\t;;\n\t13)\n\t\techo 'number is 13, please fix your [the MySQL server host ip] current!'\n\t\tread line13\n\t\tMySQLHostIp=$line13\n\t\t;;\n\t14)\n\t\techo 'number is 14, please fix your [the MySQL server host port] current!'\n\t\tread line14\n\t\tMySQLHostPort=$line14\n\t\t;;\n\t15)\n\t\techo 'number is 15, please fix your [the MySQL database name] current!'\n\t\tread line15\n\t\tdatasourceName=$line15\n\t\t;;\n\t16)\n\t\techo 'number is 16, please fix your [the MySQL database character encoding name] current!'\n\t\tread line16\n\t\tcharacterEncoding=$line16\n\t\t;;\n\t17)\n\t\techo 'number is 17, please fix your [spring.datasource.username] current!'\n\t\tread line17\n\t\tdatasourceUsername=$line17\n\t\t;;\n\t18)\n\t\techo 'number is 18, please fix your [spring.datasource.password] current!'\n\t\tread line18\n\t\tdatasourcePassword=$line18\n\t\t;;\n\t19)\n\t\techo 'number is 19, please fix your [server-config.process.name] current!'\n\t\tread line19\n\t\tprocessName=$line19\n\t\t;;\n\t20)\n\t\techo 'number is 20, please fix your [the server-config.process.description] current!'\n\t\tread line20\n\t\tprocessDescription=$line20\n\t\t;;\n\t21)\n\t\techo 'number is 21, please fix your [the server-config.process.server-address] current!'\n\t\tread line21\n\t\tprocessServerAddress=$line21\n\t\t;;\n\t22)\n\t\techo 'number is 22, please fix your [the server-config.process.port] current!'\n\t\tread line22\n\t\tprocessPort=$line22\n\t\t;;\n\t23)\n\t\techo 'number is 23, please fix your [the server-config.process.context-root] current!'\n\t\tread line23\n\t\tprocessContextRoot=$line23\n\t\t;;\n\t24)\n\t\techo 'number is 24, please fix your [the server-config.process.rest-root] current!'\n\t\tread line24\n\t\tprocessRestRoot=$line24\n\t\t;;\n\t25)\n\t\techo 'number is 25, please fix your [the server-config.process.user-name] current!'\n\t\tread line25\n\t\tprocessUserName=$line25\n\t\t;;\n\t26)\n\t\techo 'number is 26, please fix your [the server-config.process.password] current!'\n\t\tread line26\n\t\tprocessPassword=$line26\n\t\t;;\n\t27)\n\t\techo 'number is 27, please fix your [the server-config.cmmn.name] current!'\n\t\tread line27\n\t\tcmmnName=$line27\n\t\t;;\n\t28)\n\t\techo 'number is 28, please fix your [the server-config.cmmn.description] current!'\n\t\tread line28\n\t\tcmmnDescription=$line28\n\t\t;;\n\t29)\n\t\techo 'number is 29, please fix your [the server-config.cmmn.server-address] current!'\n\t\tread line29\n\t\tcmmnServerAddress=$line29\n\t\t;;\n\t30)\n\t\techo 'number is 30, please fix your [the server-config.cmmn.port] current!'\n\t\tread line30\n\t\tcmmnPort=$line30\n\t\t;;\n\t31)\n\t\techo 'number is 31, please fix your [the server-config.cmmn.context-root] current!'\n\t\tread line31\n\t\tcmmnContextRoot=$line31\n\t\t;;\n\t32)\n\t\techo 'number is 32, please fix your [the server-config.cmmn.rest-root] current!'\n\t\tread line32\n\t\tcmmnRestRoot=$line32\n\t\t;;\n\t33)\n\t\techo 'number is 33, please fix your [the server-config.cmmn.user-name] current!'\n\t\tread line33\n\t\tcmmnUserName=$line33\n\t\t;;\n\t34)\n\t\techo 'number is 34, please fix your [the server-config.cmmn.password] current!'\n\t\tread line34\n\t\tcmmnPassword=$line34\n\t\t;;\n\t35)\n\t\techo 'number is 35, please fix your [server-config.dmn.name] current!'\n\t\tread line35\n\t\tdmnName=$line35\n\t\t;;\n\t36)\n\t\techo 'number is 36, please fix your [server-config.dmn.description] current!'\n\t\tread line36\n\t\tdmnDescription=$line36\n\t\t;;\n\t37)\n\t\techo 'number is 37, please fix your [server-config.dmn.server-address] current!'\n\t\tread line37\n\t\tdmnServerAddress=$line37\n\t\t;;\n\t38)\n\t\techo 'number is 38, please fix your [server-config.dmn.port] current!'\n\t\tread line38\n\t\tdmnPort=$line38\n\t\t;;\n\t39)\n\t\techo 'number is 39, please fix your [server-config.dmn.context-root] current!'\n\t\tread line39\n\t\tdmnContextRoot=$line39\n\t\t;;\n\t40)\n\t\techo 'number is 40, please fix your [server-config.dmn.rest-root] current!'\n\t\tread line40\n\t\tdmnRestRoot=$line40\n\t\t;;\n\t41)\n\t\techo 'number is 41, please fix your [server-config.dmn.user-name] current!'\n\t\tread line41\n\t\tdmnUserName=$line41\n\t\t;;\n\t42)\n\t\techo 'number is 42, please fix your [server-config.dmn.password] current!'\n\t\tread line42\n\t\tdmnPassword=$line42\n\t\t;;\n\t43)\n\t\techo 'number is 43, please fix your [server-config.form.name] current!'\n\t\tread line43\n\t\tformName=$line43\n\t\t;;\n\t44)\n\t\techo 'number is 44, please fix your [server-config.form.description] current!'\n\t\tread line44\n\t\tformDescription=$line44\n\t\t;;\n\t45)\n\t\techo 'number is 45, please fix your [server-config.form.server-address] current!'\n\t\tread line45\n\t\tformServerAddress=$line45\n\t\t;;\n\t46)\n\t\techo 'number is 46, please fix your [server-config.form.port] current!'\n\t\tread line46\n\t\tformPort=$line46\n\t\t;;\n\t47)\n\t\techo 'number is 47, please fix your [server-config.form.context-root] current!'\n\t\tread line47\n\t\tformContextRoot=$line47\n\t\t;;\n\t48)\n\t\techo 'number is 48, please fix your [server-config.form.rest-root] current!'\n\t\tread line48\n\t\tformRestRoot=$line48\n\t\t;;\n\t49)\n\t\techo 'number is 49, please fix your [server-config.form.user-name] current!'\n\t\tread line49\n\t\tformUserName=$line49\n\t\t;;\n\t50)\n\t\techo 'number is 50, please fix your [server-config.form.password] current!'\n\t\tread line50\n\t\tformPassword=$line50\n\t\t;;\n\t51)\n\t\techo 'number is 51, please fix your [server-config.content.name] current!'\n\t\tread line51\n\t\tcontentName=$line51\n\t\t;;\n\t52)\n\t\techo 'number is 52, please fix your [server-config.content.description] current!'\n\t\tread line52\n\t\tcontentDescription=$line52\n\t\t;;\n\t53)\n\t\techo 'number is 53, please fix your [server-config.content.server-address] current!'\n\t\tread line53\n\t\tcontentServerAddress=$line53\n\t\t;;\n\t54)\n\t\techo 'number is 54, please fix your [server-config.content.port] current!'\n\t\tread line54\n\t\tcontentPort=$line54\n\t\t;;\n\t55)\n\t\techo 'number is 55, please fix your [server-config.content.context-root] current!'\n\t\tread line55\n\t\tcontentContextRoot=$line55\n\t\t;;\n\t56)\n\t\techo 'number is 56, please fix your [server-config.content.rest-root] current!'\n\t\tread line56\n\t\tcontentRestRoot=$line56\n\t\t;;\n\t57)\n\t\techo 'number is 57, please fix your [server-config.content.user-name] current!'\n\t\tread line57\n\t\tcontentUserName=$line57\n\t\t;;\n\t58)\n\t\techo 'number is 58, please fix your [server-config.content.password] current!'\n\t\tread line58\n\t\tcontentPassword=$line58\n\t\t;;\n\t59)\n\t\techo 'number is 59, please fix your [flowable.common.app.idm-url.ip] current!'\n\t\tread line59\n\t\tappIdmUrlIp=$line59\n\t\t;;\n\t60)\n\t\techo 'number is 60, please fix your [flowable.common.app.idm-url.port] current!'\n\t\tread line60\n\t\tappIdmUrlPort=$line60\n\t\t;;\n\t61)\n\t\techo 'number is 61, please fix your [flowable.common.app.idm-admin.user] current!'\n\t\tread line61\n\t\tappIdmAdminUser=$line61\n\t\t;;\n\t62)\n\t\techo 'number is 62, please fix your [flowable.common.app.idm-admin.password] current!'\n\t\tread line62\n\t\tappIdmAdminPassoword=$line62\n\t\t;;\n\t*)\n\t\techo 'Error'\n\t\t;;\n\tesac\n\techo -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\tread flag\ndone\n\necho \"flowable-admin.application.properties input info  submit successfully!!\"\n\ncat >application.properties <<EOF\nserver.port=$port\nserver.servlet.context-path=$contextPath\nmanagement.endpoints.jmx.unique-names=$jmxUniqueNames\n# This is needed to force use of JDK proxies instead of using CGLIB\nspring.aop.proxy-target-class=$proxyTargetClass\nspring.aop.auto=$auto\nspring.application.name=$applicationName\nspring.liquibase.enabled=$liquibaseEnabled\nspring.servlet.multipart.max-file-size=$multipartMaxFileSize\nspring.banner.location=$bannerLocation\n# The default domain for generating ObjectNames must be specified. Otherwise when multiple Spring Boot applications start in the same servlet container\n# all would be created with the same name (com.zaxxer.hikari:name=dataSource,type=HikariDataSource) for example\nspring.jmx.default-domain=$applicationName\n# Expose all actuator endpoints to the web\n# They are exposed, but only authenticated users can see /info and /health abd users with access-admin can see the others\nmanagement.endpoints.web.exposure.include=$webExposureInclude\n# Full health details should only be displayed when a user is authorized\nmanagement.endpoint.health.show-details=when_authorized\n# Only users with role access-admin can access full health details\nmanagement.endpoint.health.roles=access-admin\n# Spring prefixes the roles with ROLE_. However, Flowable does not have that concept yet, so we need to override that with an empty string\nflowable.common.app.role-prefix=\n\n# MySQL example (default)\n\n#spring.datasource.driver-class-name=org.h2.Driver\n#spring.datasource.url=jdbc:h2:tcp://localhost/flowableadmin\n#spring.datasource.url=jdbc:h2:~/flowable-db/db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9091;DB_CLOSE_DELAY=-1\n\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://$MySQLHostIp:$MySQLHostPort/$datasourceName?characterEncoding=$characterEncoding\n\n#spring.datasource.driver-class-name=org.postgresql.Driver\n#spring.datasource.url=jdbc:postgresql://localhost:5432/flowableadmin\n\n#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver\n#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=flowableadmin\n\n#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver\n#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:FLOWABLEADMIN\n\n#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver\n#spring.datasource.url=jdbc:db2://localhost:50000/flowableadmin\n\nspring.datasource.username=$datasourceUsername\nspring.datasource.password=$datasourcePassword\n\n# JNDI CONFIG\n\n# If uncommented, the datasource will be looked up using the configured JNDI name.\n# This will have preference over any datasource configuration done below that doesn't use JNDI\n#\n# Eg for JBoss: java:jboss/datasources/flowableDS\n#\n#spring.datasource.jndi-name==jdbc/flowableDS\n\n# Set whether the lookup occurs in a J2EE container, i.e. if the prefix \"java:comp/env/\" needs to be added if the JNDI\n# name doesn't already contain it. Default is \"true\".\n#datasource.jndi.resourceRef=true\n\n#\n# Connection pool (see https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby)\n#\n\n#spring.datasource.hikari.minimum-idle=5\n#spring.datasource.hikari.maximum-pool-size=100\n# test query for H2, MySQL, PostgreSQL and Microsoft SQL Server\n#spring.datasource.hikari.connection-test-query=select 1\n# test query for Oracle\n#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL\n# test query for DB2\n#spring.datasource.hikari.connection-test-query=SELECT current date FROM sysibm.sysdummy1\n#spring.datasource.hikari.idle-timeout=1800\n\n# Default REST endpoint configs\n#\n# Process engine\n\nflowable.admin.app.server-config.process.name=$processName\nflowable.admin.app.server-config.process.description=$processDescription\nflowable.admin.app.server-config.process.server-address=$processServerAddress\nflowable.admin.app.server-config.process.port=$processPort\nflowable.admin.app.server-config.process.context-root=$processContextRoot\nflowable.admin.app.server-config.process.rest-root=$processRestRoot\nflowable.admin.app.server-config.process.user-name=$processUserName\nflowable.admin.app.server-config.process.password=$processPassword\n\n# CMMN engine\nflowable.admin.app.server-config.cmmn.name=$cmmnName\nflowable.admin.app.server-config.cmmn.description=$cmmnDescription\nflowable.admin.app.server-config.cmmn.server-address=$cmmnServerAddress\nflowable.admin.app.server-config.cmmn.port=$cmmnPort\nflowable.admin.app.server-config.cmmn.context-root=$cmmnContextRoot\nflowable.admin.app.server-config.cmmn.rest-root=$cmmnRestRoot\nflowable.admin.app.server-config.cmmn.user-name=$cmmnUserName\nflowable.admin.app.server-config.cmmn.password=$cmmnPassword\n\n# DMN engine\nflowable.admin.app.server-config.dmn.name=$dmnName\nflowable.admin.app.server-config.dmn.description=$dmnDescription\nflowable.admin.app.server-config.dmn.server-address=$dmnServerAddress\nflowable.admin.app.server-config.dmn.port=$dmnPort\nflowable.admin.app.server-config.dmn.context-root=$dmnContextRoot\nflowable.admin.app.server-config.dmn.rest-root=$dmnRestRoot\nflowable.admin.app.server-config.dmn.user-name=$dmnUserName\nflowable.admin.app.server-config.dmn.password=$dmnPassword\n\n# Form engine\nflowable.admin.app.server-config.form.name=$formName\nflowable.admin.app.server-config.form.description=$formDescription\nflowable.admin.app.server-config.form.server-address=$formServerAddress\nflowable.admin.app.server-config.form.port=$formPort\nflowable.admin.app.server-config.form.context-root=$formContextRoot\nflowable.admin.app.server-config.form.rest-root=$formRestRoot\nflowable.admin.app.server-config.form.user-name=$formUserName\nflowable.admin.app.server-config.form.password=$formPassword\n\n# Content engine\nflowable.admin.app.server-config.content.name=$contentName\nflowable.admin.app.server-config.content.description=$contentDescription\nflowable.admin.app.server-config.content.server-address=$contentServerAddress\nflowable.admin.app.server-config.content.port=$contentPort\nflowable.admin.app.server-config.content.context-root=$contentContextRoot\nflowable.admin.app.server-config.content.rest-root=$contentRestRoot\nflowable.admin.app.server-config.content.user-name=$contentUserName\nflowable.admin.app.server-config.content.password=$contentPassword\n\n# Passwords for rest endpoints and master configs are stored encrypted in the database using AES/CBC/PKCS5PADDING\n# It needs a 128-bit initialization vector (http://en.wikipedia.org/wiki/Initialization_vector)\n# and a 128-bit secret key represented as 16 ascii characters below\n#\n# Do note that if these properties are changed after passwords have been saved, all existing passwords\n# will not be able to be decrypted and the password would need to be reset in the UI.\nflowable.admin.app.security.encryption.credentials-i-v-spec=j8kdO2hejA9lKmm6\nflowable.admin.app.security.encryption.credentials-secret-spec=9FGl73ngxcOoJvmL\nspring.security.filter.dispatcher-types=REQUEST,FORWARD,ASYNC\n\nflowable.common.app.idm-url=http://$appIdmUrlIp:$appIdmUrlPort/flowable-idm\n\nflowable.common.app.idm-admin.user=$appIdmAdminUser\nflowable.common.app.idm-admin.password=$appIdmAdminPassoword\n\nEOF\n\n# back to ../wars/flowable-admin/\ncd ..\ncd ..\n\nrm -rf flowable-admin.war\njar -cvfM0 flowable-admin.war ./\n\necho \"flowable-admin.war is successfull!\"\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------flowable-idm------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n# NOW is flowable-idm.war processesing...\n\n# back to ../wars/\ncd ..\n\ncd flowable-idm/WEB-INF/classes\n\nrm -rf application.properties\ntouch application.properties\necho \"This is flowable-idm's application.properties\"\necho -n \"[1]please input the server.port = ? (default is 8080)\"\nread port\nif [[ $port == \"\" ]]; then\n\tport='8080'\nfi\n\necho -n \"your server.port is $port\"\n\necho -n \"[2]please input the context-path = ? (default is /flowable-idm)\"\nread contextPath\nif [[ $contextPath == \"\" ]]; then\n\tcontextPath='/flowable-idm'\nfi\n\necho -n \"[3]please input the jmx.unique-names = ? (default is true)\"\nread jmxUniqueNames\nif [[ $jmxUniqueNames == \"\" ]]; then\n\tjmxUniqueNames='true'\nfi\n\necho -n \"[4]please input the proxy-target-class = ? (default is true)\"\nread proxyTargetClass\nif [[ $proxyTargetClass ]]; then\n\tproxyTargetClass='true'\nfi\n\necho -n \"[5]please input the spring.aop.auto = ? (default is true)\"\nread auto\nif [[ $auto == \"\" ]]; then\n\tauto='true'\nfi\n\necho -n \"[6]please input the spring.application.name = ? (default is flowable-ui-idm)\"\nread applicationName\nif [[ $applicationName == \"\" ]]; then\n\tapplicationName='flowable-ui-idm'\nfi\n\necho -n \"[7]please input the MySQL server host ip = ? (default is 127.0.0.1)\"\nread MySQLHostIp\nif [[ $MySQLHostIp == \"\" ]]; then\n\tMySQLHostIp='127.0.0.1'\nfi\n\necho -n \"[8]please input the MySQL server host port = ? (default is 3306)\"\nread MySQLHostPort\nif [[ $MySQLHostPort == \"\" ]]; then\n\tMySQLHostPort='3306'\nfi\n\necho -n \"[9]please input the MySQL database name = ? (default is flowable)\"\nread datasourceName\nif [[ $datasourceName == \"\" ]]; then\n\tdatasourceName='flowable'\nfi\n\necho -n \"[10]please input the MySQL database character encoding name = ? (default is UTF-8)\"\nread characterEncoding\nif [[ $characterEncoding == \"\" ]]; then\n\tcharacterEncoding='UTF-8'\nfi\n\necho -n \"[11]please input the spring.datasource.username = ? (default is root)\"\nread datasourceUsername\nif [[ $datasourceUsername == \"\" ]]; then\n\tdatasourceUsername='root'\nfi\n\necho -n \"[12]please input the spring.datasource.password = ? (default is 123456)\"\nread datasourcePassword\nif [[ $datasourcePassword == \"\" ]]; then\n\tdatasourcePassword='123456'\nfi\n\necho -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\nread flag\nwhile [[ $flag == \"n\" ]]; do\n\techo 'input number 1 to 12'\n\techo 'your number is'\n\tread aNum\n\tcase $aNum in\n\t1)\n\t\techo 'number is 1, please fix your [port] current!'\n\t\tread line1\n\t\tport=$line1\n\t\t;;\n\t2)\n\t\techo 'number is 2, please fix your [context-path] current!'\n\t\tread line2\n\t\tcontextPath=$line2\n\t\t;;\n\t3)\n\t\techo 'number is 3, please fix your [jmx.unique-names] current!'\n\t\tread line3\n\t\tjmxUniqueNames=$line3\n\t\t;;\n\t4)\n\t\techo 'number is 4, please fix your [proxy-target-class] current!'\n\t\tread line4\n\t\tproxyTargetClass=$line4\n\t\t;;\n\t5)\n\t\techo 'number is 5, please fix your [pring.aop.auto] current!'\n\t\tread line5\n\t\tauto=$line5\n\t\t;;\n\t6)\n\t\techo 'number is 6, please fix your [spring.application.name] current!'\n\t\tread line6\n\t\tapplicationName=$line6\n\t\t;;\n\t7)\n\t\techo 'number is 7, please fix your [MySQL server host ip] current!'\n\t\tread line7\n\t\tMySQLHostIp=$line7\n\t\t;;\n\t8)\n\t\techo 'number is 8, please fix your [MySQL server host port] current!'\n\t\tread line8\n\t\tMySQLHostPort=$line8\n\t\t;;\n\t9)\n\t\techo 'number is 9, please fix your [MySQL database name] current!'\n\t\tread line9\n\t\tdatasourceName=$line9\n\t\t;;\n\t10)\n\t\techo 'number is 10, please fix your [MySQL database character encoding name] current!'\n\t\tread line10\n\t\tcharacterEncoding=$line10\n\t\t;;\n\t11)\n\t\techo 'number is 11, please fix your [spring.datasource.username] current!'\n\t\tread line11\n\t\tdatasourceUsername=$line11\n\t\t;;\n\t12)\n\t\techo 'number is 12, please fix your [spring.datasource.password] current!'\n\t\tread line12\n\t\tdatasourcePassword=$line12\n\t\t;;\n\t*)\n\t\techo 'Error'\n\t\t;;\n\tesac\n\techo -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\tread flag\ndone\n\necho \"flowable-idm.application.properties input info submit successfully!!\"\n\ncat >application.properties <<EOF\nserver.port=$port\nserver.servlet.context-path=$contextPath\nmanagement.endpoints.jmx.unique-names=$jmxUniqueNames\n# This is needed to force use of JDK proxies instead of using CGLIB\nspring.aop.proxy-target-class=$proxyTargetClass\nspring.aop.auto=$auto\n# The default domain for generating ObjectNames must be specified. Otherwise when multiple Spring Boot applications start in the same servlet container\n# all would be created with the same name (com.zaxxer.hikari:name=dataSource,type=HikariDataSource) for example\nspring.application.name=$applicationName\n\n# Expose all actuator endpoints to the web\n# They are exposed, but only authenticated users can see /info and /health abd users with access-admin can see the others\nmanagement.endpoints.web.exposure.include=*\n# Full health details should only be displayed when a user is authorized\nmanagement.endpoint.health.show-details=when_authorized\n# Only users with role access-admin can access full health details\nmanagement.endpoint.health.roles=access-admin\n# Spring prefixes the roles with ROLE_. However, Flowable does not have that concept yet, so we need to override that with an empty string\nflowable.common.app.role-prefix=\n#\n# SECURITY\n#\nflowable.idm.app.security.remember-me-key=testkey\n\n#flowable.idm.password-encoder=spring_bcrypt\nspring.security.filter.dispatcher-types=REQUEST,FORWARD,ASYNC\n\n#\n# DATABASE\n#\n\n#spring.datasource.driver-class-name=org.h2.Driver\n#spring.datasource.url=jdbc:h2:~/flowable-db/db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9091;DB_CLOSE_DELAY=-1\n\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://$MySQLHostIp:$MySQLHostPort/$datasourceName?characterEncoding=$characterEncoding\n\n#spring.datasource.driver-class-name=org.postgresql.Driver\n#spring.datasource.url=jdbc:postgresql://localhost:5432/flowableidm\n\n#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver\n#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=flowableidm\n\n#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver\n#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:FLOWABLEIDM\n\n#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver\n#spring.datasource.url=jdbc:db2://localhost:50000/flowableidm\n\nspring.datasource.username=$datasourceUsername\nspring.datasource.password=$datasourcePassword\n\n#spring.datasource.hikari.minimum-idle=5\n#spring.datasource.hikari.maximum-pool-size=100\n# test query for H2, MySQL, PostgreSQL and Microsoft SQL Server\n#spring.datasource.hikari.connection-test-query=select 1\n# test query for Oracle\n#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL\n# test query for DB2\n#spring.datasource.hikari.connection-test-query=SELECT current date FROM sysibm.sysdummy1\n#spring.datasource.hikari.idle-timeout=1800\n\n#\n# LDAP\n#\n#flowable.idm.ldap.enabled=true\n#flowable.idm.ldap.server=ldap://localhost\n#flowable.idm.ldap.port=10389\n#flowable.idm.ldap.user=uid=admin, ou=system\n#flowable.idm.ldap.password=secret\n#flowable.idm.ldap.base-dn=o=flowable\n#flowable.idm.ldap.query.user-by-id=(&(objectClass=inetOrgPerson)(uid={0}))\n#flowable.idm.ldap.query.user-by-full-name-like=(&(objectClass=inetOrgPerson)(|({0}=*{1}*)({2}=*{3}*)))\n#flowable.idm.ldap.query.all-users=(objectClass=inetOrgPerson)\n#flowable.idm.ldap.query.groups-for-user=(&(objectClass=groupOfUniqueNames)(uniqueMember={0}))\n#flowable.idm.ldap.query.all-groups=(objectClass=groupOfUniqueNames)\n#flowable.idm.ldap.attribute.user-id=uid\n#flowable.idm.ldap.attribute.first-name=cn\n#flowable.idm.ldap.attribute.last-name=sn\n#flowable.idm.ldap.attribute.email=mail\n#flowable.idm.ldap.attribute.group-id=cn\n#flowable.idm.ldap.attribute.group-name=cn\n#flowable.idm.ldap.cache.group-size=10000\n#flowable.idm.ldap.cache.group-expiration=180000\n\n#\n# DEFAULT ADMINISTRATOR ACCOUNT\n#\nflowable.idm.app.admin.user-id=admin\nflowable.idm.app.admin.password=test\nflowable.idm.app.admin.first-name=Test\nflowable.idm.app.admin.last-name=Administrator\nflowable.idm.app.admin.email=admin@flowable.org\n\n# Rest api in IDM app\n\nflowable.idm.app.rest-enabled=true\n\n# Configures the way user credentials are verified when doing a REST API call:\n# 'any-user' : the user needs to exist and the password need to match. Any user is allowed to do the call (this is the pre 6.3.0 behavior)\n# 'verify-privilege' : the user needs to exist, the password needs to match and the user needs to have the 'rest-api' privilege\n# If nothing set, defaults to 'verify-privilege'\nflowable.rest.app.authentication-mode=verify-privilege\n\nEOF\n\n# back to ../wars/flowable-idm/\ncd ..\ncd ..\n\nrm -rf flowable-idm.war\njar -cvfM0 flowable-idm.war ./\n\necho \"flowable-idm.war is successfull!\"\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------flowable-modeler--------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n# NOW is flowable-idm.war processesing...\n\n# back to ../wars/\ncd ..\ncd flowable-modeler/WEB-INF/classes\n#!/usr/bin/env bash\n\nrm -rf application.properties\ntouch application.properties\n\necho -n \"[1]please input the server.port = ? (default is 8888)\"\nread port\nif [[ $port == \"\" ]]; then\n\tport='8888'\nfi\n\necho -n \"[2]please input the context-path = ? (default is /flowable-modeler)\"\nread contextPath\nif [[ $contextPath == \"\" ]]; then\n\tcontextPath='/flowable-modeler'\nfi\n\necho -n \"[3]please input the jmx.unique-names = ? (default is true)\"\nread jmxUniqueNames\nif [[ $jmxUniqueNames == \"\" ]]; then\n\tjmxUniqueNames='true'\nfi\n\necho -n \"[4]please input the proxy-target-class = ? (default is true)\"\nread proxyTargetClass\nif [[ $proxyTargetClass ]]; then\n\tproxyTargetClass='true'\nfi\n\necho -n \"[5]please input the spring.aop.auto = ? (default is false)\"\nread auto\nif [[ $auto == \"\" ]]; then\n\tauto='false'\nfi\n\necho -n \"[6]please input the spring.application.name = ? (default is flowable-ui-modeler)\"\nread applicationName\nif [[ $applicationName == \"\" ]]; then\n\tapplicationName='flowable-ui-modeler'\nfi\n\necho -n \"[7]please input the MySQL server host ip = ? (default is 127.0.0.1)\"\nread MySQLHostIp\nif [[ $MySQLHostIp == \"\" ]]; then\n\tMySQLHostIp='127.0.0.1'\nfi\n\necho -n \"[8]please input the MySQL server host port = ? (default is 3306)\"\nread MySQLHostPort\nif [[ $MySQLHostPort == \"\" ]]; then\n\tMySQLHostPort='3306'\nfi\n\necho -n \"[9]please input the MySQL database name = ? (default is flowable)\"\nread datasourceName\nif [[ $datasourceName == \"\" ]]; then\n\tdatasourceName='flowable'\nfi\n\necho -n \"[10]please input the MySQL database character encoding name = ? (default is UTF-8)\"\nread characterEncoding\nif [[ $characterEncoding == \"\" ]]; then\n\tcharacterEncoding='UTF-8'\nfi\n\necho -n \"[11]please input the spring.datasource.username = ? (default is root)\"\nread datasourceUsername\nif [[ $datasourceUsername == \"\" ]]; then\n\tdatasourceUsername='root'\nfi\n\necho -n \"[12]please input the spring.datasource.password = ? (default is 123456)\"\nread datasourcePassword\nif [[ $datasourcePassword == \"\" ]]; then\n\tdatasourcePassword='123456'\nfi\n\necho -n \"[13]please input the flowable.common.app.idm-url.host = ? (default is http://localhost)\"\nread mappIdmUrlHost\nif [[ $mappIdmUrlHost == \"\" ]]; then\n\tmappIdmUrlHost='http://localhost'\nfi\n\necho -n \"[14]please input the flowable.common.app.idm-url.port = ? (default is 8080)\"\nread mappIdmUrlPort\nif [[ $mappIdmUrlPort == \"\" ]]; then\n\tmappIdmUrlPort='8080'\nfi\n\necho -n \"[15]please input the flowable.common.app.idm-admin.user = ? (default is admin)\"\nread mappIdmAdminUser\nif [[ $mappIdmAdminUser == \"\" ]]; then\n\tmappIdmAdminUser='admin'\nfi\n\necho -n \"[16]please input the flowable.common.app.idm-admin.password = ? (default is test)\"\nread mappIdmAdminPassword\nif [[ $mappIdmAdminPassword == \"\" ]]; then\n\tmappIdmAdminPassword='test'\nfi\n\necho -n \"[17]please input the flowable.modeler.app.deployment-api-url = ? (default is http://localhost)\"\nread modelerAppDeploymentApiUrlHost\nif [[ $modelerAppDeploymentApiUrlHost == \"\" ]]; then\n\tmodelerAppDeploymentApiUrlHost='http://localhost'\nfi\n\necho -n \"[18]please input the flowable.modeler.app.deployment-api-url.port = ? (default is 8080)\"\nread modelerAppDeploymentApiUrlPort\nif [[ $modelerAppDeploymentApiUrlPort == \"\" ]]; then\n\tmodelerAppDeploymentApiUrlPort='8080'\nfi\n\necho -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\nread flag\nwhile [[ $flag == \"n\" ]]; do\n\techo 'input number 1 to 18'\n\techo 'your number is'\n\tread aNum\n\tcase $aNum in\n\t1)\n\t\techo 'number is 1, please fix your [port] current!'\n\t\tread line1\n\t\tport=$line1\n\t\t;;\n\t2)\n\t\techo 'number is 2, please fix your [context-path] current!'\n\t\tread line2\n\t\tcontextPath=$line2\n\t\t;;\n\t3)\n\t\techo 'number is 3, please fix your [jmx.unique-names] current!'\n\t\tread line3\n\t\tjmxUniqueNames=$line3\n\t\t;;\n\t4)\n\t\techo 'number is 4, please fix your [proxy-target-class] current!'\n\t\tread line4\n\t\tproxyTargetClass=$line4\n\t\t;;\n\t5)\n\t\techo 'number is 5, please fix your [pring.aop.auto] current!'\n\t\tread line5\n\t\tauto=$line5\n\t\t;;\n\t6)\n\t\techo 'number is 6, please fix your [spring.application.name] current!'\n\t\tread line6\n\t\tapplicationName=$line6\n\t\t;;\n\t7)\n\t\techo 'number is 7, please fix your [MySQL server host ip] current!'\n\t\tread line7\n\t\tMySQLHostIp=$line7\n\t\t;;\n\t8)\n\t\techo 'number is 8, please fix your [MySQL server host port] current!'\n\t\tread line8\n\t\tMySQLHostPort=$line8\n\t\t;;\n\t9)\n\t\techo 'number is 9, please fix your [MySQL database name] current!'\n\t\tread line9\n\t\tdatasourceName=$line9\n\t\t;;\n\t10)\n\t\techo 'number is 10, please fix your [MySQL database character encoding name] current!'\n\t\tread line10\n\t\tcharacterEncoding=$line10\n\t\t;;\n\t11)\n\t\techo 'number is 11, please fix your [spring.datasource.username] current!'\n\t\tread line11\n\t\tdatasourceUsername=$line11\n\t\t;;\n\t12)\n\t\techo 'number is 12, please fix your [spring.datasource.password] current!'\n\t\tread line12\n\t\tdatasourcePassword=$line12\n\t\t;;\n\t13)\n\t\techo 'number is 13, please fix your [flowable.common.app.idm-url.host] current!'\n\t\tread line13\n\t\tmappIdmUrlHost=$line13\n\t\t;;\n\t14)\n\t\techo 'number is 14, please fix your [flowable.common.app.idm-url.port] current!'\n\t\tread line14\n\t\tmappIdmUrlPort=$line14\n\t\t;;\n\t15)\n\t\techo 'number is 15, please fix your [flowable.common.app.idm-admin.user] current!'\n\t\tread line15\n\t\tmappIdmAdminUser=$line15\n\t\t;;\n\t16)\n\t\techo 'number is 16, please fix your [flowable.common.app.idm-admin.password] current!'\n\t\tread line16\n\t\tmappIdmAdminPassword=$line16\n\t\t;;\n\t17)\n\t\techo 'number is 17, please fix your [flowable.modeler.app.deployment-api-url.host] current!'\n\t\tread line17\n\t\tmodelerAppDeploymentApiUrlHost=$line17\n\t\t;;\n\t18)\n\t\techo 'number is 18, please fix your [flowable.modeler.app.deployment-api-url.port] current!'\n\t\tread line18\n\t\tmodelerAppDeploymentApiUrlPort=$line18\n\t\t;;\n\t*)\n\t\techo 'Error'\n\t\t;;\n\tesac\n\techo -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\tread flag\ndone\n\necho \"flowable-modeler.application.properties input info submit successfully!!\"\n\ncat >application.properties <<EOF\nserver.port=$port\nserver.servlet.context-path=$contextPath\nmanagement.endpoints.jmx.unique-names=$jmxUniqueNames\n# This is needed to force use of JDK proxies instead of using CGLIB\nspring.aop.proxy-target-class=$proxyTargetClass\nspring.aop.auto=$auto\nspring.application.name=$applicationName\n#\n# SECURITY\n#\nspring.security.filter.dispatcher-types=REQUEST,FORWARD,ASYNC\nspring.liquibase.enabled=false\nspring.banner.location=classpath:/org/flowable/spring/boot/flowable-banner.txt\n# The default domain for generating ObjectNames must be specified. Otherwise when multiple Spring Boot applications start in the same servlet container\n# all would be created with the same name (com.zaxxer.hikari:name=dataSource,type=HikariDataSource) for example\nspring.jmx.default-domain=$applicationName\n\n# Expose all actuator endpoints to the web\n# They are exposed, but only authenticated users can see /info and /health abd users with access-admin can see the others\nmanagement.endpoints.web.exposure.include=*\n# Full health details should only be displayed when a user is authorized\nmanagement.endpoint.health.show-details=when_authorized\n# Only users with role access-admin can access full health details\nmanagement.endpoint.health.roles=access-admin\n# Spring prefixes the roles with ROLE_. However, Flowable does not have that concept yet, so we need to override that with an empty string\nflowable.common.app.role-prefix=\n\n#\n# DATABASE\n#\n\n#spring.datasource.driver-class-name=org.h2.Driver\n#spring.datasource.url=jdbc:h2:~/flowable-db/db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9091;DB_CLOSE_DELAY=-1\n\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://$MySQLHostIp:$MySQLHostPort/$datasourceName?characterEncoding=$characterEncoding\n\n#spring.datasource.driver-class-name=org.postgresql.Driver\n#spring.datasource.url=jdbc:postgresql://localhost:5432/flowablemodeler\n\n#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver\n#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=flowablemodeler\n\n#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver\n#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:FLOWABLEMODELER\n\n#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver\n#spring.datasource.url=jdbc:db2://localhost:50000/flowablemodeler\n\nspring.datasource.username=$datasourceUsername\nspring.datasource.password=$datasourcePassword\n\n#spring.datasource.hikari.minimum-idle=5\n#spring.datasource.hikari.maximum-pool-size=100\n# test query for H2, MySQL, PostgreSQL and Microsoft SQL Server\n#spring.datasource.hikari.connection-test-query=select 1\n# test query for Oracle\n#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL\n# test query for DB2\n#spring.datasource.hikari.connection-test-query=SELECT current date FROM sysibm.sysdummy1\n#spring.datasource.hikari.idle-timeout=1800\n\n# The maximum file upload limit. Set to -1 to set to 'no limit'. Expressed in bytes\nspring.servlet.multipart.max-file-size=10MB\n\nflowable.common.app.idm-url=$mappIdmUrlHost:$mappIdmUrlPort/flowable-idm\nflowable.common.app.idm-admin.user=$mappIdmAdminUser\nflowable.common.app.idm-admin.password=$mappIdmAdminPassword\n\nflowable.modeler.app.deployment-api-url=$modelerAppDeploymentApiUrlHost:$modelerAppDeploymentApiUrlPort/flowable-task/process-api\n\n\n# Rest API\n\nflowable.modeler.app.rest-enabled=true\n\n# Configures the way user credentials are verified when doing a REST API call:\n# 'any-user' : the user needs to exist and the password need to match. Any user is allowed to do the call (this is the pre 6.3.0 behavior)\n# 'verify-privilege' : the user needs to exist, the password needs to match and the user needs to have the 'rest-api' privilege\n# If nothing set, defaults to 'verify-privilege'\nflowable.rest.app.authentication-mode=verify-privilege\n\n\n# Set the tenant_id \n# For the modeler this determines under which tenant_id to store and publish models\n# When not provided, empty or only contains whitespace it defaults to the user's tenant id if available \n# otherwise it uses no tenant id\n#flowable.common.app.tenant-id=demo\n\nEOF\n\n# back to ../wars/flowable-modeler/\ncd ..\ncd ..\n\nrm -rf flowable-modeler.war\njar -cvfM0 flowable-modeler.war ./\n\necho \"flowable-modeler.war is successfull!\"\n\n# back to ../wars/\ncd ..\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------flowable-rest--------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n# NOW is flowable-rest.war processesing...\n\ncd flowable-rest/WEB-INF/classes\n\nrm -rf application.properties\ntouch application.properties\n\necho -n \"[1]please input the MySQL server host ip = ? (default is 127.0.0.1)\"\nread MySQLHostIp\nif [[ $MySQLHostIp == \"\" ]]; then\n\tMySQLHostIp='127.0.0.1'\nfi\n\necho -n \"[2]please input the MySQL server host port = ? (default is 3306)\"\nread MySQLHostPort\nif [[ $MySQLHostPort == \"\" ]]; then\n\tMySQLHostPort='3306'\nfi\n\necho -n \"[3]please input the MySQL database name = ? (default is flowable)\"\nread datasourceName\nif [[ $datasourceName == \"\" ]]; then\n\tdatasourceName='flowable'\nfi\n\necho -n \"[4]please input the MySQL database character encoding name = ? (default is UTF-8)\"\nread characterEncoding\nif [[ $characterEncoding == \"\" ]]; then\n\tcharacterEncoding='UTF-8'\nfi\n\necho -n \"[5]please input the spring.datasource.username = ? (default is root)\"\nread datasourceUsername\nif [[ $datasourceUsername == \"\" ]]; then\n\tdatasourceUsername='root'\nfi\n\necho -n \"[6]please input the spring.datasource.password = ? (default is 123456)\"\nread datasourcePassword\nif [[ $datasourcePassword == \"\" ]]; then\n\tdatasourcePassword='123456'\nfi\n\necho -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\nread flag\nwhile [[ $flag == \"n\" ]]; do\n\techo 'input number 1 to 6'\n\techo 'your number is'\n\tread aNum\n\tcase $aNum in\n\t1)\n\t\techo 'number is 1, please fix your [MySQL server host ip] current!'\n\t\tread line1\n\t\tMySQLHostIp=$line1\n\t\t;;\n\t2)\n\t\techo 'number is 2, please fix your [MySQL server host port] current!'\n\t\tread line2\n\t\tMySQLHostPort=$line2\n\t\t;;\n\t3)\n\t\techo 'number is 3, please fix your [MySQL database name] current!'\n\t\tread line3\n\t\tdatasourceName=$line3\n\t\t;;\n\t4)\n\t\techo 'number is 4, please fix your [MySQL database character encoding name] current!'\n\t\tread line4\n\t\tcharacterEncoding=$line4\n\t\t;;\n\t5)\n\t\techo 'number is 5, please fix your [spring.datasource.username] current!'\n\t\tread line5\n\t\tdatasourceUsername=$line5\n\t\t;;\n\t6)\n\t\techo 'number is 6, please fix your [spring.datasource.password] current!'\n\t\tread line6\n\t\tdatasourcePassword=$line6\n\t\t;;\n\t*)\n\t\techo 'Error'\n\t\t;;\n\tesac\n\techo -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\tread flag\ndone\n\necho \"flowable-modeler.application.properties input info submit successfully!!\"\n\ncat >application.properties <<EOF\n#server.port=8086\nserver.servlet.context-path=/flowable-rest\n# Expose all actuator endpoints to the web\n# They are exposed, but only authenticated users can see /info and /health abd users with access-admin can see the others\nmanagement.endpoints.web.exposure.include=*\n# Full health details should only be displayed when a user is authorized\nmanagement.endpoint.health.show-details=when_authorized\n# Only users with role access-admin can access full health details\nmanagement.endpoint.health.roles=access-admin\n# Spring prefixes the roles with ROLE_. However, Flowable does not have that concept yet, so we need to override that with an empty string\nflowable.rest.app.role-prefix=\nspring.application.name=flowable-rest\nspring.banner.location=classpath:/org/flowable/spring/boot/flowable-banner.txt\n# The default domain for generating ObjectNames must be specified. Otherwise when multiple Spring Boot applications start in the same servlet container\n# all would be created with the same name (com.zaxxer.hikari:name=dataSource,type=HikariDataSource) for example\nspring.jmx.default-domain=/flowable-rest\n# datasource\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://$MySQLHostIp:$MySQLHostPort/$datasourceName?characterEncoding=$characterEncoding\nspring.datasource.username=$datasourceUsername\nspring.datasource.password=$datasourcePassword\n\n#spring.datasource.hikari.minimum-idle=5\n#spring.datasource.hikari.maximum-pool-size=100\n# test query for H2, MySQL, PostgreSQL and Microsoft SQL Server\n#spring.datasource.hikari.connection-test-query=select 1\n# test query for Oracle\n#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL\n# test query for DB2\n#spring.datasource.hikari.connection-test-query=SELECT current date FROM sysibm.sysdummy1\n#spring.datasource.hikari.idle-timeout=1800\n\nspring.datasource.type=com.zaxxer.hikari.HikariDataSource\n\n# Deploys demo process definitions that allows to have some example data when using the REST API's\nflowable.rest.app.create-demo-definitions=true\n\n# engine properties\nflowable.process.servlet.path=/service\nflowable.database-schema-update=true\nflowable.async-executor-activate=true\nflowable.history-level=full\n\n# rest properties\n\n# Configures the way user credentials are verified when doing a REST API call:\n# 'any-user' : the user needs to exist and the password need to match. Any user is allowed to do the call (this is the pre 6.3.0 behavior)\n# 'verify-privilege' : the user needs to exist, the password needs to match and the user needs to have the 'rest-api' privilege\n# If nothing set, defaults to 'verify-privilege'\nflowable.rest.app.authentication-mode=verify-privilege\n\n# Enable/disable Java serializable objects to be passed as variables in the REST API.\nrest.variables.allow.serializable=true\n\n# Enable/disable whether the docs are available on /docs\nflowable.rest.app.swagger-docs-enabled=true\n\nflowable.rest.app.admin.user-id=rest-admin\nflowable.rest.app.admin.password=test\nflowable.rest.app.admin.firstname=Rest\nflowable.rest.app.admin.lastname=Admin\nEOF\n\n# back to ../wars/flowable-rest/\ncd ..\ncd ..\n\nrm -rf flowable-rest.war\njar -cvfM0 flowable-rest.war ./\n\necho \"flowable-rest.war is successfull!\"\n\n# back to ../wars\ncd ..\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------flowable-task--------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#\n# NOW is flowable-task.war processesing...\n\ncd flowable-task/WEB-INF/classes\n\nrm -rf application.properties\ntouch application.properties\n\necho -n \"[1]please input the MySQL server host ip = ? (default is 127.0.0.1)\"\nread MySQLHostIp\nif [[ $MySQLHostIp == \"\" ]]; then\n\tMySQLHostIp='127.0.0.1'\nfi\n\necho -n \"[2]please input the MySQL server host port = ? (default is 3306)\"\nread MySQLHostPort\nif [[ $MySQLHostPort == \"\" ]]; then\n\tMySQLHostPort='3306'\nfi\n\necho -n \"[3]please input the MySQL database name = ? (default is flowable)\"\nread datasourceName\nif [[ $datasourceName == \"\" ]]; then\n\tdatasourceName='flowable'\nfi\n\necho -n \"[4]please input the MySQL database character encoding name = ? (default is UTF-8)\"\nread characterEncoding\nif [[ $characterEncoding == \"\" ]]; then\n\tcharacterEncoding='UTF-8'\nfi\n\necho -n \"[5]please input the spring.datasource.username = ? (default is root)\"\nread datasourceUsername\nif [[ $datasourceUsername == \"\" ]]; then\n\tdatasourceUsername='root'\nfi\n\necho -n \"[6]please input the spring.datasource.password = ? (default is 123456)\"\nread datasourcePassword\nif [[ $datasourcePassword == \"\" ]]; then\n\tdatasourcePassword='123456'\nfi\n\necho -n \"[7]please input the flowable.common.app.idm-url.host = ? (default is http://localhost)\"\nread mappIdmUrlHost\nif [[ $mappIdmUrlHost == \"\" ]]; then\n\tmappIdmUrlHost='http://localhost'\nfi\n\necho -n \"[8]please input the flowable.common.app.idm-url.port = ? (default is 8080)\"\nread mappIdmUrlPort\nif [[ $mappIdmUrlPort == \"\" ]]; then\n\tmappIdmUrlPort='8080'\nfi\n\necho -n \"[9]please input the flowable.common.app.idm-admin.user = ? (default is admin)\"\nread mappIdmAdminUser\nif [[ $mappIdmAdminUser == \"\" ]]; then\n\tmappIdmAdminUser='admin'\nfi\n\necho -n \"[10]please input the flowable.common.app.idm-admin.password = ? (default is test)\"\nread mappIdmAdminPassword\nif [[ $mappIdmAdminPassword == \"\" ]]; then\n\tmappIdmAdminPassword='test'\nfi\n\necho -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\nread flag\nwhile [[ $flag == \"n\" ]]; do\n\techo 'input number 1 to 10'\n\techo 'your number is'\n\tread aNum\n\tcase $aNum in\n\t1)\n\t\techo 'number is 1, please fix your [MySQL server host ip] current!'\n\t\tread line1\n\t\tMySQLHostIp=$line1\n\t\t;;\n\t2)\n\t\techo 'number is 2, please fix your [MySQL server host port] current!'\n\t\tread line2\n\t\tMySQLHostPort=$line2\n\t\t;;\n\t3)\n\t\techo 'number is 3, please fix your [MySQL database name] current!'\n\t\tread line3\n\t\tdatasourceName=$line3\n\t\t;;\n\t4)\n\t\techo 'number is 4, please fix your [MySQL database character encoding name] current!'\n\t\tread line4\n\t\tcharacterEncoding=$line4\n\t\t;;\n\t5)\n\t\techo 'number is 5, please fix your [spring.datasource.username] current!'\n\t\tread line5\n\t\tdatasourceUsername=$line5\n\t\t;;\n\t6)\n\t\techo 'number is 6, please fix your [spring.datasource.password] current!'\n\t\tread line6\n\t\tdatasourcePassword=$line6\n\t\t;;\n\t7)\n\t\techo 'number is 7, please fix your [flowable.common.app.idm-url.host] current!'\n\t\tread line7\n\t\tmappIdmUrlHost=$line7\n\t\t;;\n\t8)\n\t\techo 'number is 8, please fix your [flowable.common.app.idm-url.port] current!'\n\t\tread line8\n\t\tmappIdmUrlPort=$line8\n\t\t;;\n\t9)\n\t\techo 'number is 9, please fix your [flowable.common.app.idm-admin.user] current!'\n\t\tread line9\n\t\tmappIdmAdminUser=$line9\n\t\t;;\n\t10)\n\t\techo 'number is 10, please fix your [flowable.common.app.idm-admin.password] current!'\n\t\tread line10\n\t\tmappIdmAdminPassword=$line10\n\t\t;;\n\t*)\n\t\techo 'Error'\n\t\t;;\n\tesac\n\techo -n \"confirm，if wrong, please choice 'n' to fix it !, input y/n:\"\n\tread flag\ndone\n\necho \"flowable-modeler.application.properties input info submit successfully!!\"\n\ncat >application.properties <<EOF\nserver.port=9999\nserver.servlet.context-path=/flowable-task\nmanagement.endpoints.jmx.unique-names=true\n# This is needed to force use of JDK proxies instead of using CGLIB\nspring.aop.proxy-target-class=false\nspring.aop.auto=false\nspring.application.name=flowable-ui-task\nspring.banner.location=classpath:/org/flowable/spring/boot/flowable-banner.txt\n# The default domain for generating ObjectNames must be specified. Otherwise when multiple Spring Boot applications start in the same servlet container\n# all would be created with the same name (com.zaxxer.hikari:name=dataSource,type=HikariDataSource) for example\nspring.jmx.default-domain=/flowable-task\n#\n# SECURITY\n#\nspring.security.filter.dispatcher-types=REQUEST,FORWARD,ASYNC\n\n# Expose all actuator endpoints to the web\n# They are exposed, but only authenticated users can see /info and /health abd users with access-admin can see the others\nmanagement.endpoints.web.exposure.include=*\n# Full health details should only be displayed when a user is authorized\nmanagement.endpoint.health.show-details=when_authorized\n# Only users with role access-admin can access full health details\nmanagement.endpoint.health.roles=access-admin\n# Spring prefixes the roles with ROLE_. However, Flowable does not have that concept yet, so we need to override that with an empty string\nflowable.common.app.role-prefix=\n\n#\n# DATABASE\n#\n\n#spring.datasource.driver-class-name=org.h2.Driver\n#spring.datasource.url=jdbc:h2:~/flowable-db/db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9091;DB_CLOSE_DELAY=-1\n\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://$MySQLHostIp:$MySQLHostPort/$datasourceName?characterEncoding=$characterEncoding\n\n#spring.datasource.driver-class-name=org.postgresql.Driver\n#spring.datasource.url=jdbc:postgresql://localhost:5432/flowable\n\n#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver\n#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=flowablea\n\n#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver\n#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:FLOWABLE\n\n#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver\n#spring.datasource.url=jdbc:db2://localhost:50000/flowable\n\nspring.datasource.username=$datasourceUsername\nspring.datasource.password=$datasourcePassword\n\n# JNDI CONFIG\n\n# If uncommented, the datasource will be looked up using the configured JNDI name.\n# This will have preference over any datasource configuration done below that doesn't use JNDI\n#\n# Eg for JBoss: java:jboss/datasources/flowableDS\n#\n#spring.datasource.jndi-name==jdbc/flowableDS\n\n# Set whether the lookup occurs in a J2EE container, i.e. if the prefix \"java:comp/env/\" needs to be added if the JNDI\n# name doesn't already contain it. Default is \"true\".\n#datasource.jndi.resourceRef=true\n\n#\n# Connection pool (see https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby)\n#\n\n#spring.datasource.hikari.minimum-idle=5\n#spring.datasource.hikari.maximum-pool-size=100\n# test query for H2, MySQL, PostgreSQL and Microsoft SQL Server\n#spring.datasource.hikari.connection-test-query=select 1\n# test query for Oracle\n#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL\n# test query for DB2\n#spring.datasource.hikari.connection-test-query=SELECT current date FROM sysibm.sysdummy1\n#spring.datasource.hikari.idle-timeout=1800\n\n#\n# EMAIL\n#\n\n#flowable.mail.server.host=localhost\n#flowable.mail.server.port=1025\n#flowable.mail.server.username=\n#flowable.mail.server.password=\n\n#\n# FLOWABLE\n#\n\nflowable.process.definition-cache-limit=512\n#flowable.dmn.strict-mode=false\nflowable.process.async.executor.default-async-job-acquire-wait-time-in-millis=5000\nflowable.process.async.executor.default-timer-job-acquire-wait-time-in-millis=5000\n\nflowable.cmmn.async.executor.default-async-job-acquire-wait-time-in-millis=5000\nflowable.cmmn.async.executor.default-timer-job-acquire-wait-time-in-millis=5000\n\n# The maximum file upload limit. Set to -1 to set to 'no limit'. Expressed in bytes\nspring.servlet.multipart.max-file-size=10MB\n\n# For development purposes, data folder is created inside the sources ./data folder\nflowable.content.storage.root-folder=data/\nflowable.content.storage.create-root=true\n\nflowable.common.app.idm-url=$mappIdmUrlHost:$mappIdmUrlPort/flowable-idm\nflowable.common.app.idm-admin.user=$mappIdmAdminUser\nflowable.common.app.idm-admin.password=$mappIdmAdminPassword\n\n#flowable.common.app.redirect-on-auth-success=http://localhost:8080/flowable-task\n#flowable.modeler.app.deployment-api-url=http://localhost:8080/flowable-task/process-api\n\nflowable.experimental.debugger.enabled=false\n\n# Rest API in task application\n\n# If false, disables the rest api in the task app\nflowable.task.app.rest-enabled=true\n\n# Configures the way user credentials are verified when doing a REST API call:\n# 'any-user' : the user needs to exist and the password need to match. Any user is allowed to do the call (this is the pre 6.3.0 behavior)\n# 'verify-privilege' : the user needs to exist, the password needs to match and the user needs to have the 'rest-api' privilege\n# If nothing set, defaults to 'verify-privilege'\nflowable.rest.app.authentication-mode=verify-privilege\nEOF\n\n# back to ../wars/flowable-task/\ncd ..\ncd ..\n\nrm -rf flowable-task.war\njar -cvfM0 flowable-task.war ./\n\necho \"flowable-task.war is successfull!\"\n\n```","tags":["shell"]},{"title":"Element UI之Cascader 级联选择器多选操作","url":"/2019/12/24/48acf05e-5b94-4e18-b62a-f277e34237fb/","content":"<!-- more -->\n## 1、概要\n### 1.1、级联选择器，树型展示\nElement UI的官网链接：[https://element.eleme.cn/#/zh-CN/component/cascader](https://element.eleme.cn/#/zh-CN/component/cascader)\n使用环境：\n`\"element-ui\": \"2.9.0\",`\n需要依赖为2.9.x及以上，配合 \n`\"vue\": \"2.5.22\"` 以上。\n如果版本不匹配，多选操作是显示不出来的。\n### 1.2、需求描述\n数据库中存在两张表，user表和org表，user表中有字段org_id，记录这个人所属的组织id，org表中有org_id，org_name等字段。\n表结构简介如下\nuser:\n\n| id | name | org_id | ... | \n| --- | --- | --- |--- |\n| 1 | admin | 10000|...|\n\norg\n\n| org_id | org_name | .... |\n| --- | --- | --- |\n| 10000 | 六扇门 | ... |\n\n目前每个人只有一个所属组织，管理员，部门负责人在进行组织查询的时候，只能有本部门及其子部门的展示权限，虽然不属于部门B，但是想看到部门B的信息，单选满足不了，靠两个表维护不了多选的信息。\n\n","tags":["elementui"]},{"title":"开发规范笔记","url":"/2019/03/07/16d9fb52-dd5b-4339-9b38-a98df48a8b46/","content":"<!--more-->\n### 概要\n日常开发中，虽然代码可用性通过，要求的功能实现了，但是有一些规范需要去遵守；避免不注意犯了一些低级错误；本文笔记梳理一些常忽略的点，以免下次再进坑；\n\n1、公共类中的方法最好不要动；\n2、uuid要谨慎使用；\n3、公共的方法要放到公共的类中；\n4、业务类的方法比较多，取名字要规范一些，长点不要紧，但是一定要读出来方法的作用是什么；如果表达不出来，加上必要的注释；\n5、尽量不要捕获类似Exception通用异常，而是捕获特定的异常，具体到哪一种子类型；\n6、在复杂的生产系统中，标准出错STERR不是合适的输出选项，尤其是分布式系统，最好使用产品日志；详细的输出到日志系统中；STREE无法找到堆栈轨迹；\n不要在<b>catch</b>代码块中直接[printStackTrace()](https://docs.oracle.com/javase/9/docs/api/java/lang/Throwable.html#printStackTrace--)\n7、[配置文件]在微服务的resources下的配置文件，可能会有许多的配置文件，每个配置文件尽量要求做到名字直观易懂，必要时在配置文件中做出单独的说明；","tags":["总结"]},{"title":"EHR系统员工生日提醒（跨年查询）总结与笔记","url":"/2018/12/19/81e30f7a-a061-4cfb-aace-39fdf4860955/","content":"<!-- more -->\n### 1、概要\n生日跨年提醒，在EHR系统中，用户选择某个时间段都那些人过生日，并发送邮件提醒；本文只描述如何去跨年查询。\n前端使用Vue.js/Element UI;\n后端使用Java/Spring Cloud/微服务架构模式\n本文修改于：2019年03月15日\n\n### 2、思路\n1、前端获取的是时间段，用户输入的时间段发送给后端的时候，判断一下用户选择的时间；\n2、如果没有跨年，则调用函数a；\n3、如果跨年了，则调用函数b；\n### 3、实现过程\n#### 3.1、前端实现\n###### 3.1.1、界面效果\n\n![](../../../../../../images/2.png)\n\nElement UI时间组件：[点击这里](http://element-cn.eleme.io/#/zh-CN/component/date-picker)\n\n###### 3.1.2、前端代码\n```javascript\n      handleFilter() {\n        this.searchkpi();\n        this.listQuery.startDataBirthdayPoint = this.employeeBirthday[0].toString().substring(5, 10).replace('-', '')\n        this.listQuery.endDataBirthdayPoint = this.employeeBirthday[1].toString().substring(5, 10).replace('-', '')\n        if (this.employeeBirthday[0].toString().substring(0, 4) === this.employeeBirthday[1].toString().substring(0, 4)) {\n          this.getListNotAcrossYear();\n        } else {\n          this.getList();\n        }\n      }\n      // 代码片段1\n```\n第5行代码，判断了年份是否相同，如果年份是否相同，如果相同，则调用<b>this.getListNotAcrossYear</b>, 调用接口：<b>pageBirthdayNotAcrossYear()</b>, 参数为this.listQuery;\n```javascript\n      getListNotAcrossYear() {\n        this.loading = true;\n        pageBirthdayNotAcrossYear(this.listQuery)\n          .then(response => {\n            this.list = response.data.rows;\n            this.total = response.data.total;\n            this.loading = false;\n          }).catch(error => {\n            console.error(error)\n            this.loading = false\n          })\n      }\n       // 代码片段2\n```\n<b>this.listQuery</b>包含两个字段：\n```javascript\n          startDataBirthdayPoint: undefined,\n          endDataBirthdayPoint: undefined\n           // 代码片段3\n```\n这两个字段，作为listQuery的一部分，作为参数，通过前端的API请求接口，传递给后端:\n```javascript\n// 生日提醒\nexport function pageBirthdayNotAcrossYear(query) {\n  return request({\n    url: '/api/admin/mEmployeeInfo/pageBirthdayNotAcrossYear',\n    method: 'get',\n    params: query\n  })\n}\n // 代码片段4\n```\n从接口中可以看到：传入的参数是<b>query</b>,使用GET的方式传递给后端。\n相同的，在<b>代码片段1</b>中的第8行，则是请求跨年的，在前端的代码部分都是一样的，这里我是在前端就对其进行了分开，后来想了想，如果日期传递到后端，在后端进行处理，代码量要少很多。\n#### 3.2、后端实现\n先看下不跨年的，包含Java代码和MyBatis的.xml映射文件；\n###### 3.2.1、Java代码\n首先是Controller类：\n```java\n@RequestMapping(\"mEmployeeInfo\")\n// 代码片段5\n```\n应和了在代码片段4中的请求接口；\n这是Java代码Controller的函数：\n```java\n    @RequestMapping(value = \"/pageBirthdayNotAcrossYear\", method = RequestMethod.GET)\n    @ResponseBody\n    public TableResultResponse<MEmployeeInfo> selectBirthdayNotAcrossYear(@RequestParam Map<String, Object> params) {\n        PageQuery query = new PageQuery(params, params);\n        return mEmployeeInfoBiz.selectBirthdayNotAcrossYear(query);\n    }\n    //代码片段6\n```\n\n函数的类型是<b>TableResultResponse</b>,返回的是一个结果集；\n\n这是Java代码Service类的函数：\n```java\n    // 生日到期提醒(不跨年)\n    public TableResultResponse<MEmployeeInfo> selectBirthdayNotAcrossYear(PageQuery<MEmployeeInfo> query) {\n        PageExample example = new PageExample(MEmployeeInfo.class, query.getData());\n        Page<MEmployeeInfo> result = PageHelper.startPage(query.getPage(), query.getLimit());\n        List<MEmployeeInfo> list = mEmployeeInfoMapper.selectBirthdayNotAcrossYear(example);\n        if (list.size() > 0){\n            try {\n                mergeCore.mergeResult(MEmployeeInfo.class, list);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        return  new TableResultResponse<MEmployeeInfo>(result.getTotal(), list);\n    }\n    // 代码片段7\n```\nDAO类\n```java\nList<MEmployeeInfo> selectBirthdayNotAcrossYear(Object example);\n// 代码片段8\n```\n#### 3.2.2、MyBatis的映射文件\n接下来是MyBatis的映射文件代码\n```java\n    <select id=\"selectBirthdayNotAcrossYear\" parameterType=\"com.savor.security.common.entity.PageExample\" resultMap=\"BaseResultMap\">\n        SELECT\n        t.*, y.position_name\n        FROM\n        m_employee_info t\n        LEFT JOIN m_position y ON t.position_id = y.position_id\n        WHERE\n        t.employee_id IS NOT NULL\n        <if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\">\n            AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #{data.startDataBirthdayPoint} AND #{data.endDataBirthdayPoint}\n        </if>\n    </select>\n    -- 代码片段9\n```\n\n跨年的请求处理，跟上面的代码没有区别，不同之处体现在最后的映射文件这里：\n```java\n    <select id=\"selectByBirthday\" parameterType=\"com.savor.security.common.entity.PageExample\" resultMap=\"BaseResultMap\">\n        select a.* from (\n        SELECT\n        t.*, y.position_name\n        FROM\n        m_employee_info t\n        LEFT JOIN m_position y ON t.position_id = y.position_id\n        WHERE\n        t.employee_id IS NOT NULL\n        <if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\">\n            AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #{data.startDataBirthdayPoint} AND #{data.endDataBirthdayPoint}\n        </if>\n        UNION ALL\n        SELECT\n        t.*, y.position_name\n        FROM\n        m_employee_info t\n        LEFT JOIN m_position y ON t.position_id = y.position_id\n        WHERE\n        t.employee_id IS NOT NULL\n        <if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\">\n            AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #{data.startDataBirthdayPoint} AND '1231'\n        </if>\n        UNION ALL\n        SELECT\n        t.*, y.position_name\n        FROM\n        m_employee_info t\n        LEFT JOIN m_position y ON t.position_id = y.position_id\n        WHERE\n        t.employee_id IS NOT NULL\n        <if test=\"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''\">\n            AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN '0101' AND #{data.endDataBirthdayPoint}\n        </if>\n        ) as a\n    </select>\n```\n其中也分成了三段，第一段就是正常的输入日期，但是不会去调用了。\n后两段是：\n如果跨年的时候，比如选择这个时间段2018-12-05~2019-03-15进行查询，那么数据流到映射文件这里的时候，会被分成两段（因为生日是考虑月日的，不考虑年）：就是12-05~12-31一部分人；01-01~03-15第二部分人；最后加起来，就是要的人数；\n\n","tags":["Spring Cloud"]}]