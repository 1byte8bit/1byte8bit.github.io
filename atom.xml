<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>youxiu</title>
  <icon>https://www.gravatar.com/avatar/867820a66e980bfd6c174baa3e2ed6a4</icon>
  <subtitle>good good study,day day up</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://youxiu.net/"/>
  <updated>2020-03-21T08:34:55.181Z</updated>
  <id>https://youxiu.net/</id>
  
  <author>
    <name>qiu_</name>
    <email>notexist@youxiu.net</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java List深拷贝</title>
    <link href="https://youxiu.net/2020/03/16/d2fcc40a-e791-4704-8ddb-d0123aed0904/"/>
    <id>https://youxiu.net/2020/03/16/d2fcc40a-e791-4704-8ddb-d0123aed0904/</id>
    <published>2020-03-16T05:09:56.000Z</published>
    <updated>2020-03-21T08:34:55.181Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="1-概要"><a href="#1-概要" class="headerlink" title="1 概要"></a>1 概要</h2><p>遇到一个取数的过程业务代码段：<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ......</span></span><br><span class="line">List&lt;T&gt; list1 = xx.getListByParam(param1);</span><br><span class="line">map.put(<span class="string">"list1"</span>,list1);</span><br><span class="line">List&lt;T&gt; list2 = xx.getListByParam(param2);</span><br><span class="line">map.put(<span class="string">"list2"</span>, list2);</span><br><span class="line"><span class="comment">// ......</span></span><br></pre></td></tr></table></figure></p><p>其中，list1中，某属性的值，在list2获取的过程中，发生改变。出现问题。</p><h2 id="2-Java-List-深拷贝的问题"><a href="#2-Java-List-深拷贝的问题" class="headerlink" title="2 Java List 深拷贝的问题"></a>2 Java List 深拷贝的问题</h2><p>解决方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">deepCopy</span><span class="params">(List&lt;T&gt; list)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line"></span><br><span class="line">    ByteArrayOutputStream arrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">    ObjectOutputStream objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(arrayOutputStream);</span><br><span class="line">    objectOutputStream.writeObject(list);</span><br><span class="line"></span><br><span class="line">    ByteArrayInputStream arrayInputStream = <span class="keyword">new</span> ByteArrayInputStream(arrayOutputStream.toByteArray());</span><br><span class="line">    ObjectInputStream objectInputStream = <span class="keyword">new</span> ObjectInputStream(arrayInputStream);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    List&lt;T&gt; reList = (List&lt;T&gt;) objectInputStream.readObject();</span><br><span class="line">    <span class="keyword">return</span> reList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-问题分析"><a href="#3-问题分析" class="headerlink" title="3 问题分析"></a>3 问题分析</h2><p>代码表现是：</p><ul><li>Controller类中的两个不同的方法，调用了同一个Serveice类中的方法</li><li>这个动作是一个查询动作引起</li><li>这个动作到了Controller层，会调用多次、多个Service类的方法</li></ul><p>避免出现此问题，导致数据不准确，则需要考虑Java List的深拷贝的问题。</p><h2 id="4-分析List的深浅拷贝"><a href="#4-分析List的深浅拷贝" class="headerlink" title="4 分析List的深浅拷贝"></a>4 分析List的深浅拷贝</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1-概要&quot;&gt;&lt;a href=&quot;#1-概要&quot; class=&quot;headerlink&quot; title=&quot;1 概要&quot;&gt;&lt;/a&gt;1 概要&lt;/h2&gt;&lt;p&gt;遇到一个取数的过程业务代码段：&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="java" scheme="https://youxiu.net/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>使用Bash Shell实现自定义信息修改flowable工作流引擎war包配置</title>
    <link href="https://youxiu.net/2020/02/17/2eeba61b-ff4b-4166-ae26-ee61b6002724/"/>
    <id>https://youxiu.net/2020/02/17/2eeba61b-ff4b-4166-ae26-ee61b6002724/</id>
    <published>2020-02-17T15:25:27.000Z</published>
    <updated>2020-03-27T00:41:31.929Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><strong>变更记录</strong></p><table><thead><tr><th>变更项</th><th>时间</th><th>更新者</th></tr></thead><tbody><tr><td>初始化文档，实现war包的处理</td><td>2020.01</td><td>me</td></tr></tbody></table><h1 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h1><p>部署flowable工作流引擎，需要根据所在服务器的IP和MySQL账密信息，修改很多配置项，为方便，这些配置项，采用脚本批处理的方式，将用户在终端输入的信息，进行处理并修改配置项。</p><h1 id="2、脚本内容"><a href="#2、脚本内容" class="headerlink" title="2、脚本内容"></a>2、脚本内容</h1><p>脚本做了以下事情：</p><ul><li>解压flowable.zip</li><li>创建flowable-admin等5个文件夹，并将flowable-admin.war等5个war包依次移动至相对应的文件夹</li><li>解压war包 &amp;&amp; 进入指定目录，处理配置文件</li><li>接受用户输入的配置项各项信息</li><li>每一个配置文件输入结束时，会确认是否要继续，正确输入y，则生成application.properies配置文件</li><li>错误则输入n，输入指定的数字，进行纠正，直至用户输入y确认成配置文件</li><li>将处理好的文件，打包成war包</li></ul><h1 id="3、实现"><a href="#3、实现" class="headerlink" title="3、实现"></a>3、实现</h1><p>如图，使用的时候，保证脚本和压缩包在同一目录下：<br><img src="https://flowable-deploy.oss-cn-beijing.aliyuncs.com/tutorial/Screen%20Shot%202020-03-21%20at%2022.55.40.png" alt=""><br><br><br>这段代码是获取路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CURDIR=$(</span><br><span class="line">cd $(dirname $&#123;BASH_SOURCE[0]&#125;)</span><br><span class="line">pwd</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><br><br>处理用户输入内容<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cd flowable-admin/WEB-INF/classes</span><br><span class="line">rm -rf application.properties</span><br><span class="line">touch application.properties</span><br><span class="line"><span class="meta">#</span> 提示端口，如果不输入，会有默认值9988</span><br><span class="line">echo -n "[1]please input the server.port = ? (default is 9988)"</span><br><span class="line">read port</span><br><span class="line">if [[ $port == "" ]]; then</span><br><span class="line">port='9988'</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo -n "your server.port is $port"</span><br><span class="line"></span><br><span class="line">echo -n "[13]please input the MySQL server host ip = ? (default is 127.0.0.1)"</span><br><span class="line">read MySQLHostIp</span><br><span class="line">if [[ $MySQLHostIp == "" ]]; then</span><br><span class="line">MySQLHostIp='127.0.0.1'</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo -n "[14]please input the MySQL server host port = ? (default is 3306)"</span><br><span class="line">read MySQLHostPort</span><br><span class="line">if [[ $MySQLHostPort == "" ]]; then</span><br><span class="line">MySQLHostPort='3306'</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p><br><br>上文说过，如果错了，是可以根据序号修正输入信息的。如果flag不为y，则会一直询问正确输入，直至输入y为止。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">read flag</span><br><span class="line">while [[ $flag == "n" ]]; do</span><br><span class="line">echo 'input number 1 to 26, the numbers are not continuous'</span><br><span class="line">echo 'your number is'</span><br><span class="line">read aNum</span><br><span class="line">case $aNum in</span><br><span class="line">1)</span><br><span class="line">echo 'number is 1, please fix your [port] current!'</span><br><span class="line">read line1</span><br><span class="line">port=$line1</span><br><span class="line">;;</span><br><span class="line">13)</span><br><span class="line">echo 'number is 13, please fix your [the MySQL server host ip] current!'</span><br><span class="line">read line13</span><br><span class="line">MySQLHostIp=$line13</span><br><span class="line">;;</span><br><span class="line">14)</span><br><span class="line">echo 'number is 14, please fix your [the MySQL server host port] current!'</span><br><span class="line">read line14</span><br><span class="line">MySQLHostPort=$line14</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo 'Error'</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">echo -n "confirm，if wrong, please choice 'n' to fix it !, input y/n:"</span><br><span class="line">read flag</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p><br><br>最后，使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;application.properties &lt;&lt;EOF</span><br></pre></td></tr></table></figure><p>并配合类似:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.username=$datasourceUsername</span><br><span class="line">spring.datasource.password=$datasourcePassword</span><br></pre></td></tr></table></figure><p>将读取终端input的变量值写入要生成的配置文件中。</p><h1 id="4、脚本地址"><a href="#4、脚本地址" class="headerlink" title="4、脚本地址"></a>4、脚本地址</h1><p><a href="https://flowable.oss-cn-beijing.aliyuncs.com/semi_auto_deploy_flowable_sample.sh" target="_blank" rel="noopener">https://flowable.oss-cn-beijing.aliyuncs.com/semi_auto_deploy_flowable_sample.sh</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;变更记录&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变更项&lt;/th&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;更新者&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;初始
      
    
    </summary>
    
    
      <category term="shell" scheme="https://youxiu.net/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>开发规范笔记与经验</title>
    <link href="https://youxiu.net/2019/03/07/16d9fb52-dd5b-4339-9b38-a98df48a8b46/"/>
    <id>https://youxiu.net/2019/03/07/16d9fb52-dd5b-4339-9b38-a98df48a8b46/</id>
    <published>2019-03-07T08:59:03.000Z</published>
    <updated>2020-03-11T07:17:16.854Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h1><p>日常开发中，虽然代码可用性通过，要求的功能实现了，但是有一些规范需要去遵守；避免不注意犯了一些低级错误；本文笔记梳理一些常忽略的点，以免下次再进坑；</p><p>1、公共类中的方法最好不要动；<br>2、uuid要谨慎使用；<br>3、公共的方法要放到公共的类中；<br>4、业务类的方法比较多，取名字要规范一些，长点不要紧，但是一定要读出来方法的作用是什么；如果表达不出来，加上必要的注释；<br>5、尽量不要捕获类似Exception通用异常，而是捕获特定的异常，具体到哪一种子类型；<br>6、在复杂的生产系统中，标准出错STERR不是合适的输出选项，尤其是分布式系统，最好使用产品日志；详细的输出到日志系统中；STREE无法找到堆栈轨迹；<br>不要在<b>catch</b>代码块中直接<a href="https://docs.oracle.com/javase/9/docs/api/java/lang/Throwable.html#printStackTrace--" target="_blank" rel="noopener">printStackTrace()</a><br>7、[配置文件]在微服务的resources下的配置文件，可能会有许多的配置文件，每个配置文件尽量要求做到名字直观易懂，必要时在配置文件中做出单独的说明；<br>8、Java的类名开头要写明是什么；<br>9、Java中的方法要写明作者、邮箱、版本、参数、返回；</p><h1 id="2、关于异常"><a href="#2、关于异常" class="headerlink" title="2、关于异常"></a>2、关于异常</h1><h3 id="2-1、图片的异常"><a href="#2-1、图片的异常" class="headerlink" title="2.1、图片的异常"></a>2.1、图片的异常</h3><p>如果图片不存在，就会在程序运行时引起异常，图片如果是网络资源，有一种方法，如下，可以处理图片异常的情况。<br>获取图片的url，记得关闭流。对于异常的情况，则给一个固定的、一定存在的连接。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    URL urlTemp = <span class="keyword">new</span> URL(url + employeeInfo.getEmployeeId() + <span class="string">".jpg"</span>);</span><br><span class="line">    URLConnection uc = urlTemp.openConnection();</span><br><span class="line">    InputStream in = uc.getInputStream();</span><br><span class="line">    in.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">    map.put(<span class="string">"photoUrl"</span>,<span class="string">"http://192.168.6.125/static/photo/default/boy.png"</span>);</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h1&gt;&lt;p&gt;日常开发中，虽然代码可用性通过，要求的功能实现了，但是有一些规范需要去遵守；避免不注意犯
      
    
    </summary>
    
    
      <category term="总结" scheme="https://youxiu.net/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
