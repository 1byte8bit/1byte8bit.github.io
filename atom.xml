<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秀儿,是你吗?</title>
  <icon>https://www.gravatar.com/avatar/3563d1ddc1457652131bef3aa9d25ab0</icon>
  <subtitle>good good study,day day up</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://youxiu.net/"/>
  <updated>2020-03-21T08:34:55.181Z</updated>
  <id>https://youxiu.net/</id>
  
  <author>
    <name>qiu_</name>
    <email>2binarytree@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java List深拷贝</title>
    <link href="https://youxiu.net/2020/03/16/d2fcc40a-e791-4704-8ddb-d0123aed0904/"/>
    <id>https://youxiu.net/2020/03/16/d2fcc40a-e791-4704-8ddb-d0123aed0904/</id>
    <published>2020-03-16T05:09:56.000Z</published>
    <updated>2020-03-21T08:34:55.181Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="1-概要"><a href="#1-概要" class="headerlink" title="1 概要"></a>1 概要</h2><p>遇到一个取数的过程业务代码段：<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ......</span></span><br><span class="line">List&lt;T&gt; list1 = xx.getListByParam(param1);</span><br><span class="line">map.put(<span class="string">"list1"</span>,list1);</span><br><span class="line">List&lt;T&gt; list2 = xx.getListByParam(param2);</span><br><span class="line">map.put(<span class="string">"list2"</span>, list2);</span><br><span class="line"><span class="comment">// ......</span></span><br></pre></td></tr></table></figure></p><p>其中，list1中，某属性的值，在list2获取的过程中，发生改变。出现问题。</p><h2 id="2-Java-List-深拷贝的问题"><a href="#2-Java-List-深拷贝的问题" class="headerlink" title="2 Java List 深拷贝的问题"></a>2 Java List 深拷贝的问题</h2><p>解决方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">deepCopy</span><span class="params">(List&lt;T&gt; list)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line"></span><br><span class="line">    ByteArrayOutputStream arrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">    ObjectOutputStream objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(arrayOutputStream);</span><br><span class="line">    objectOutputStream.writeObject(list);</span><br><span class="line"></span><br><span class="line">    ByteArrayInputStream arrayInputStream = <span class="keyword">new</span> ByteArrayInputStream(arrayOutputStream.toByteArray());</span><br><span class="line">    ObjectInputStream objectInputStream = <span class="keyword">new</span> ObjectInputStream(arrayInputStream);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    List&lt;T&gt; reList = (List&lt;T&gt;) objectInputStream.readObject();</span><br><span class="line">    <span class="keyword">return</span> reList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-问题分析"><a href="#3-问题分析" class="headerlink" title="3 问题分析"></a>3 问题分析</h2><p>代码表现是：</p><ul><li>Controller类中的两个不同的方法，调用了同一个Serveice类中的方法</li><li>这个动作是一个查询动作引起</li><li>这个动作到了Controller层，会调用多次、多个Service类的方法</li></ul><p>避免出现此问题，导致数据不准确，则需要考虑Java List的深拷贝的问题。</p><h2 id="4-分析List的深浅拷贝"><a href="#4-分析List的深浅拷贝" class="headerlink" title="4 分析List的深浅拷贝"></a>4 分析List的深浅拷贝</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1-概要&quot;&gt;&lt;a href=&quot;#1-概要&quot; class=&quot;headerlink&quot; title=&quot;1 概要&quot;&gt;&lt;/a&gt;1 概要&lt;/h2&gt;&lt;p&gt;遇到一个取数的过程业务代码段：&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="java" scheme="https://youxiu.net/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Redis关于内存和内存优化笔记</title>
    <link href="https://youxiu.net/2020/03/06/ad5161c0-03f5-4340-9b8e-cc8566503dea/"/>
    <id>https://youxiu.net/2020/03/06/ad5161c0-03f5-4340-9b8e-cc8566503dea/</id>
    <published>2020-03-06T04:40:25.000Z</published>
    <updated>2020-03-07T05:28:02.698Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h1><p>系统学习Redis的内存和内存优化主题笔记。<br>参考资料：<a href="https://github.com/Weiwf/redis-mindmap" target="_blank" rel="noopener">https://github.com/Weiwf/redis-mindmap</a> 的思维导图。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h1&gt;&lt;p&gt;系统学习Redis的内存和内存优化主题笔记。&lt;br&gt;参考资料：&lt;a href=&quot;http
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java之JVM的总结与对垃圾回收的实践</title>
    <link href="https://youxiu.net/2020/03/06/e648e796-99ff-4832-9063-21981d0b67d4/"/>
    <id>https://youxiu.net/2020/03/06/e648e796-99ff-4832-9063-21981d0b67d4/</id>
    <published>2020-03-06T04:39:59.000Z</published>
    <updated>2020-03-11T07:17:22.288Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h2><h3 id="1-1、背景"><a href="#1-1、背景" class="headerlink" title="1.1、背景"></a>1.1、背景</h3><p>出于对Java代码优化的理解和对JVM的深一步理解，借助部分资源，学习、总结；<br>参考资料是(<a href="https://github.com/Weiwf/JVM-mindmap.git)[https://github.com/Weiwf/JVM-mindmap.git]里面的思维导图。" target="_blank" rel="noopener">https://github.com/Weiwf/JVM-mindmap.git)[https://github.com/Weiwf/JVM-mindmap.git]里面的思维导图。</a><br>还有《深入理解Java虚拟机》书籍。</p><h3 id="1-2、实现目标"><a href="#1-2、实现目标" class="headerlink" title="1.2、实现目标"></a>1.2、实现目标</h3><ul><li>总结JVM知识提纲</li><li>开发事习惯打开GC日志，习惯分析</li><li>优化参数多，能够借助第三方工具，进行GC日志分析，通过日志分析，对代码进行改造</li><li>学习与改造第三方工具，加深理解</li></ul><h2 id="2、JVM的内存结构"><a href="#2、JVM的内存结构" class="headerlink" title="2、JVM的内存结构"></a>2、JVM的内存结构</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h2&gt;&lt;h3 id=&quot;1-1、背景&quot;&gt;&lt;a href=&quot;#1-1、背景&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="jvm" scheme="https://youxiu.net/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>记录软件开发的诞生---套用软件工程学，进行开发。</title>
    <link href="https://youxiu.net/2020/03/06/2566b127-2c3e-4539-ab75-51dc0a72db16/"/>
    <id>https://youxiu.net/2020/03/06/2566b127-2c3e-4539-ab75-51dc0a72db16/</id>
    <published>2020-03-06T04:39:43.000Z</published>
    <updated>2020-03-16T05:20:06.420Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h1><p>想到啥，写啥。<br>打算从设计、到代码。</p><ul><li>iOS使用Objective-C + Swift</li><li>Android使用Java</li><li>后端使用Java Spring Boot</li><li>PC使用Vue.js</li></ul><h3 id="1-1、要做啥呢？"><a href="#1-1、要做啥呢？" class="headerlink" title="1.1、要做啥呢？"></a>1.1、要做啥呢？</h3><p>community? or shop?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h1&gt;&lt;p&gt;想到啥，写啥。&lt;br&gt;打算从设计、到代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iOS使用Obje
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Bash Shell实现自定义信息修改flowable工作流引擎war包配置</title>
    <link href="https://youxiu.net/2020/02/17/2eeba61b-ff4b-4166-ae26-ee61b6002724/"/>
    <id>https://youxiu.net/2020/02/17/2eeba61b-ff4b-4166-ae26-ee61b6002724/</id>
    <published>2020-02-17T15:25:27.000Z</published>
    <updated>2020-03-27T00:41:31.929Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><strong>变更记录</strong></p><table><thead><tr><th>变更项</th><th>时间</th><th>更新者</th></tr></thead><tbody><tr><td>初始化文档，实现war包的处理</td><td>2020.01</td><td>me</td></tr></tbody></table><h1 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h1><p>部署flowable工作流引擎，需要根据所在服务器的IP和MySQL账密信息，修改很多配置项，为方便，这些配置项，采用脚本批处理的方式，将用户在终端输入的信息，进行处理并修改配置项。</p><h1 id="2、脚本内容"><a href="#2、脚本内容" class="headerlink" title="2、脚本内容"></a>2、脚本内容</h1><p>脚本做了以下事情：</p><ul><li>解压flowable.zip</li><li>创建flowable-admin等5个文件夹，并将flowable-admin.war等5个war包依次移动至相对应的文件夹</li><li>解压war包 &amp;&amp; 进入指定目录，处理配置文件</li><li>接受用户输入的配置项各项信息</li><li>每一个配置文件输入结束时，会确认是否要继续，正确输入y，则生成application.properies配置文件</li><li>错误则输入n，输入指定的数字，进行纠正，直至用户输入y确认成配置文件</li><li>将处理好的文件，打包成war包</li></ul><h1 id="3、实现"><a href="#3、实现" class="headerlink" title="3、实现"></a>3、实现</h1><p>如图，使用的时候，保证脚本和压缩包在同一目录下：<br><img src="https://flowable-deploy.oss-cn-beijing.aliyuncs.com/tutorial/Screen%20Shot%202020-03-21%20at%2022.55.40.png" alt=""><br><br><br>这段代码是获取路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CURDIR=$(</span><br><span class="line">cd $(dirname $&#123;BASH_SOURCE[0]&#125;)</span><br><span class="line">pwd</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><br><br>处理用户输入内容<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cd flowable-admin/WEB-INF/classes</span><br><span class="line">rm -rf application.properties</span><br><span class="line">touch application.properties</span><br><span class="line"><span class="meta">#</span> 提示端口，如果不输入，会有默认值9988</span><br><span class="line">echo -n "[1]please input the server.port = ? (default is 9988)"</span><br><span class="line">read port</span><br><span class="line">if [[ $port == "" ]]; then</span><br><span class="line">port='9988'</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo -n "your server.port is $port"</span><br><span class="line"></span><br><span class="line">echo -n "[13]please input the MySQL server host ip = ? (default is 127.0.0.1)"</span><br><span class="line">read MySQLHostIp</span><br><span class="line">if [[ $MySQLHostIp == "" ]]; then</span><br><span class="line">MySQLHostIp='127.0.0.1'</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo -n "[14]please input the MySQL server host port = ? (default is 3306)"</span><br><span class="line">read MySQLHostPort</span><br><span class="line">if [[ $MySQLHostPort == "" ]]; then</span><br><span class="line">MySQLHostPort='3306'</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p><br><br>上文说过，如果错了，是可以根据序号修正输入信息的。如果flag不为y，则会一直询问正确输入，直至输入y为止。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">read flag</span><br><span class="line">while [[ $flag == "n" ]]; do</span><br><span class="line">echo 'input number 1 to 26, the numbers are not continuous'</span><br><span class="line">echo 'your number is'</span><br><span class="line">read aNum</span><br><span class="line">case $aNum in</span><br><span class="line">1)</span><br><span class="line">echo 'number is 1, please fix your [port] current!'</span><br><span class="line">read line1</span><br><span class="line">port=$line1</span><br><span class="line">;;</span><br><span class="line">13)</span><br><span class="line">echo 'number is 13, please fix your [the MySQL server host ip] current!'</span><br><span class="line">read line13</span><br><span class="line">MySQLHostIp=$line13</span><br><span class="line">;;</span><br><span class="line">14)</span><br><span class="line">echo 'number is 14, please fix your [the MySQL server host port] current!'</span><br><span class="line">read line14</span><br><span class="line">MySQLHostPort=$line14</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo 'Error'</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">echo -n "confirm，if wrong, please choice 'n' to fix it !, input y/n:"</span><br><span class="line">read flag</span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p><br><br>最后，使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;application.properties &lt;&lt;EOF</span><br></pre></td></tr></table></figure><p>并配合类似:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.username=$datasourceUsername</span><br><span class="line">spring.datasource.password=$datasourcePassword</span><br></pre></td></tr></table></figure><p>将读取终端input的变量值写入要生成的配置文件中。</p><h1 id="4、脚本地址"><a href="#4、脚本地址" class="headerlink" title="4、脚本地址"></a>4、脚本地址</h1><p><a href="https://flowable.oss-cn-beijing.aliyuncs.com/semi_auto_deploy_flowable_sample.sh" target="_blank" rel="noopener">https://flowable.oss-cn-beijing.aliyuncs.com/semi_auto_deploy_flowable_sample.sh</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;变更记录&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变更项&lt;/th&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;更新者&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;初始
      
    
    </summary>
    
    
      <category term="shell" scheme="https://youxiu.net/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Element UI之Cascader 级联选择器多选操作</title>
    <link href="https://youxiu.net/2019/12/24/48acf05e-5b94-4e18-b62a-f277e34237fb/"/>
    <id>https://youxiu.net/2019/12/24/48acf05e-5b94-4e18-b62a-f277e34237fb/</id>
    <published>2019-12-24T08:22:45.000Z</published>
    <updated>2020-03-21T08:37:11.690Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h2><h3 id="1-1、级联选择器，树型展示"><a href="#1-1、级联选择器，树型展示" class="headerlink" title="1.1、级联选择器，树型展示"></a>1.1、级联选择器，树型展示</h3><p>Element UI的官网链接：<a href="https://element.eleme.cn/#/zh-CN/component/cascader" target="_blank" rel="noopener">https://element.eleme.cn/#/zh-CN/component/cascader</a><br>使用环境：<br><code>&quot;element-ui&quot;: &quot;2.9.0&quot;,</code><br>需要依赖为2.9.x及以上，配合<br><code>&quot;vue&quot;: &quot;2.5.22&quot;</code> 以上。<br>如果版本不匹配，多选操作是显示不出来的。</p><h3 id="1-2、需求描述"><a href="#1-2、需求描述" class="headerlink" title="1.2、需求描述"></a>1.2、需求描述</h3><p>数据库中存在两张表，user表和org表，user表中有字段org_id，记录这个人所属的组织id，org表中有org_id，org_name等字段。<br>表结构简介如下<br>user:</p><table><thead><tr><th>id</th><th>name</th><th>org_id</th><th>…</th></tr></thead><tbody><tr><td>1</td><td>admin</td><td>10000000</td><td>…</td></tr></tbody></table><p>org</p><table><thead><tr><th>org_id</th><th>org_name</th><th>parent_org_id</th></tr></thead><tbody><tr><td>00000000</td><td>刑部</td><td>-1</td></tr><tr><td>10000000</td><td>六扇门</td><td>00000000</td></tr><tr><td>10000001</td><td>总管</td><td>10000000</td></tr><tr><td>10000002</td><td>办公室</td><td>10000000</td></tr><tr><td>10000003</td><td>兵器管理</td><td>10000000</td></tr><tr><td>10000003</td><td>财政</td><td>10000000</td></tr><tr><td>10000003</td><td>保洁</td><td>10000000</td></tr></tbody></table><ul><li>目前每个人只有一个所属组织</li><li>管理员，部门负责人在进行组织查询的时候，只能有本部门及其子部门的展示权限</li><li>虽然不属于部门B，但是想看到部门B的信息，单选满足不了，靠两个表维护不了多选的信息。</li></ul><p>基于以上来自产品顾问天马星空的想法，对现有的情况进行改造。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h2&gt;&lt;h3 id=&quot;1-1、级联选择器，树型展示&quot;&gt;&lt;a href=&quot;#1-1、级联选择器，树型展
      
    
    </summary>
    
    
      <category term="elementui" scheme="https://youxiu.net/tags/elementui/"/>
    
  </entry>
  
  <entry>
    <title>开发规范笔记与经验</title>
    <link href="https://youxiu.net/2019/03/07/16d9fb52-dd5b-4339-9b38-a98df48a8b46/"/>
    <id>https://youxiu.net/2019/03/07/16d9fb52-dd5b-4339-9b38-a98df48a8b46/</id>
    <published>2019-03-07T08:59:03.000Z</published>
    <updated>2020-03-11T07:17:16.854Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h1><p>日常开发中，虽然代码可用性通过，要求的功能实现了，但是有一些规范需要去遵守；避免不注意犯了一些低级错误；本文笔记梳理一些常忽略的点，以免下次再进坑；</p><p>1、公共类中的方法最好不要动；<br>2、uuid要谨慎使用；<br>3、公共的方法要放到公共的类中；<br>4、业务类的方法比较多，取名字要规范一些，长点不要紧，但是一定要读出来方法的作用是什么；如果表达不出来，加上必要的注释；<br>5、尽量不要捕获类似Exception通用异常，而是捕获特定的异常，具体到哪一种子类型；<br>6、在复杂的生产系统中，标准出错STERR不是合适的输出选项，尤其是分布式系统，最好使用产品日志；详细的输出到日志系统中；STREE无法找到堆栈轨迹；<br>不要在<b>catch</b>代码块中直接<a href="https://docs.oracle.com/javase/9/docs/api/java/lang/Throwable.html#printStackTrace--" target="_blank" rel="noopener">printStackTrace()</a><br>7、[配置文件]在微服务的resources下的配置文件，可能会有许多的配置文件，每个配置文件尽量要求做到名字直观易懂，必要时在配置文件中做出单独的说明；<br>8、Java的类名开头要写明是什么；<br>9、Java中的方法要写明作者、邮箱、版本、参数、返回；</p><h1 id="2、关于异常"><a href="#2、关于异常" class="headerlink" title="2、关于异常"></a>2、关于异常</h1><h3 id="2-1、图片的异常"><a href="#2-1、图片的异常" class="headerlink" title="2.1、图片的异常"></a>2.1、图片的异常</h3><p>如果图片不存在，就会在程序运行时引起异常，图片如果是网络资源，有一种方法，如下，可以处理图片异常的情况。<br>获取图片的url，记得关闭流。对于异常的情况，则给一个固定的、一定存在的连接。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    URL urlTemp = <span class="keyword">new</span> URL(url + employeeInfo.getEmployeeId() + <span class="string">".jpg"</span>);</span><br><span class="line">    URLConnection uc = urlTemp.openConnection();</span><br><span class="line">    InputStream in = uc.getInputStream();</span><br><span class="line">    in.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">    map.put(<span class="string">"photoUrl"</span>,<span class="string">"http://192.168.6.125/static/photo/default/boy.png"</span>);</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h1&gt;&lt;p&gt;日常开发中，虽然代码可用性通过，要求的功能实现了，但是有一些规范需要去遵守；避免不注意犯
      
    
    </summary>
    
    
      <category term="总结" scheme="https://youxiu.net/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>EHR系统员工生日提醒（跨年查询）总结与笔记</title>
    <link href="https://youxiu.net/2018/12/19/81e30f7a-a061-4cfb-aace-39fdf4860955/"/>
    <id>https://youxiu.net/2018/12/19/81e30f7a-a061-4cfb-aace-39fdf4860955/</id>
    <published>2018-12-19T00:26:48.000Z</published>
    <updated>2020-03-06T04:33:13.225Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="1、概要"><a href="#1、概要" class="headerlink" title="1、概要"></a>1、概要</h3><p>生日跨年提醒，在EHR系统中，用户选择某个时间段都那些人过生日，并发送邮件提醒；本文只描述如何去跨年查询。<br>前端使用Vue.js/Element UI;<br>后端使用Java/Spring Cloud/微服务架构模式<br>本文修改于：2019年03月15日</p><h3 id="2、思路"><a href="#2、思路" class="headerlink" title="2、思路"></a>2、思路</h3><p>1、前端获取的是时间段，用户输入的时间段发送给后端的时候，判断一下用户选择的时间；<br>2、如果没有跨年，则调用函数a；<br>3、如果跨年了，则调用函数b；</p><h3 id="3、实现过程"><a href="#3、实现过程" class="headerlink" title="3、实现过程"></a>3、实现过程</h3><h4 id="3-1、前端实现"><a href="#3-1、前端实现" class="headerlink" title="3.1、前端实现"></a>3.1、前端实现</h4><h6 id="3-1-1、界面效果"><a href="#3-1-1、界面效果" class="headerlink" title="3.1.1、界面效果"></a>3.1.1、界面效果</h6><p><img src="../../../../../../images/2.png" alt=""></p><p>Element UI时间组件：<a href="http://element-cn.eleme.io/#/zh-CN/component/date-picker" target="_blank" rel="noopener">点击这里</a></p><h6 id="3-1-2、前端代码"><a href="#3-1-2、前端代码" class="headerlink" title="3.1.2、前端代码"></a>3.1.2、前端代码</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">handleFilter() &#123;</span><br><span class="line">  <span class="keyword">this</span>.searchkpi();</span><br><span class="line">  <span class="keyword">this</span>.listQuery.startDataBirthdayPoint = <span class="keyword">this</span>.employeeBirthday[<span class="number">0</span>].toString().substring(<span class="number">5</span>, <span class="number">10</span>).replace(<span class="string">'-'</span>, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">this</span>.listQuery.endDataBirthdayPoint = <span class="keyword">this</span>.employeeBirthday[<span class="number">1</span>].toString().substring(<span class="number">5</span>, <span class="number">10</span>).replace(<span class="string">'-'</span>, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.employeeBirthday[<span class="number">0</span>].toString().substring(<span class="number">0</span>, <span class="number">4</span>) === <span class="keyword">this</span>.employeeBirthday[<span class="number">1</span>].toString().substring(<span class="number">0</span>, <span class="number">4</span>)) &#123;</span><br><span class="line">    <span class="keyword">this</span>.getListNotAcrossYear();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.getList();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 代码片段1</span></span><br></pre></td></tr></table></figure><p>第5行代码，判断了年份是否相同，如果年份是否相同，如果相同，则调用<b>this.getListNotAcrossYear</b>, 调用接口：<b>pageBirthdayNotAcrossYear()</b>, 参数为this.listQuery;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">getListNotAcrossYear() &#123;</span><br><span class="line">  <span class="keyword">this</span>.loading = <span class="literal">true</span>;</span><br><span class="line">  pageBirthdayNotAcrossYear(<span class="keyword">this</span>.listQuery)</span><br><span class="line">    .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.list = response.data.rows;</span><br><span class="line">      <span class="keyword">this</span>.total = response.data.total;</span><br><span class="line">      <span class="keyword">this</span>.loading = <span class="literal">false</span>;</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(error)</span><br><span class="line">      <span class="keyword">this</span>.loading = <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 代码片段2</span></span><br></pre></td></tr></table></figure></p><p><b>this.listQuery</b>包含两个字段：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">startDataBirthdayPoint: <span class="literal">undefined</span>,</span><br><span class="line">endDataBirthdayPoint: <span class="literal">undefined</span></span><br><span class="line"> <span class="comment">// 代码片段3</span></span><br></pre></td></tr></table></figure></p><p>这两个字段，作为listQuery的一部分，作为参数，通过前端的API请求接口，传递给后端:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生日提醒</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">pageBirthdayNotAcrossYear</span>(<span class="params">query</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> request(&#123;</span><br><span class="line">    url: <span class="string">'/api/admin/mEmployeeInfo/pageBirthdayNotAcrossYear'</span>,</span><br><span class="line">    method: <span class="string">'get'</span>,</span><br><span class="line">    params: query</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">// 代码片段4</span></span><br></pre></td></tr></table></figure></p><p>从接口中可以看到：传入的参数是<b>query</b>,使用GET的方式传递给后端。<br>相同的，在<b>代码片段1</b>中的第8行，则是请求跨年的，在前端的代码部分都是一样的，这里我是在前端就对其进行了分开，后来想了想，如果日期传递到后端，在后端进行处理，代码量要少很多。</p><h4 id="3-2、后端实现"><a href="#3-2、后端实现" class="headerlink" title="3.2、后端实现"></a>3.2、后端实现</h4><p>先看下不跨年的，包含Java代码和MyBatis的.xml映射文件；</p><h6 id="3-2-1、Java代码"><a href="#3-2-1、Java代码" class="headerlink" title="3.2.1、Java代码"></a>3.2.1、Java代码</h6><p>首先是Controller类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"mEmployeeInfo"</span>)</span><br><span class="line"><span class="comment">// 代码片段5</span></span><br></pre></td></tr></table></figure></p><p>应和了在代码片段4中的请求接口；<br>这是Java代码Controller的函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/pageBirthdayNotAcrossYear"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> TableResultResponse&lt;MEmployeeInfo&gt; <span class="title">selectBirthdayNotAcrossYear</span><span class="params">(@RequestParam Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">    PageQuery query = <span class="keyword">new</span> PageQuery(params, params);</span><br><span class="line">    <span class="keyword">return</span> mEmployeeInfoBiz.selectBirthdayNotAcrossYear(query);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//代码片段6</span></span><br></pre></td></tr></table></figure></p><p>函数的类型是<b>TableResultResponse</b>,返回的是一个结果集；</p><p>这是Java代码Service类的函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生日到期提醒(不跨年)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> TableResultResponse&lt;MEmployeeInfo&gt; <span class="title">selectBirthdayNotAcrossYear</span><span class="params">(PageQuery&lt;MEmployeeInfo&gt; query)</span> </span>&#123;</span><br><span class="line">    PageExample example = <span class="keyword">new</span> PageExample(MEmployeeInfo.class, query.getData());</span><br><span class="line">    Page&lt;MEmployeeInfo&gt; result = PageHelper.startPage(query.getPage(), query.getLimit());</span><br><span class="line">    List&lt;MEmployeeInfo&gt; list = mEmployeeInfoMapper.selectBirthdayNotAcrossYear(example);</span><br><span class="line">    <span class="keyword">if</span> (list.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mergeCore.mergeResult(MEmployeeInfo.class, list);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="keyword">new</span> TableResultResponse&lt;MEmployeeInfo&gt;(result.getTotal(), list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 代码片段7</span></span><br></pre></td></tr></table></figure></p><p>DAO类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;MEmployeeInfo&gt; <span class="title">selectBirthdayNotAcrossYear</span><span class="params">(Object example)</span></span>;</span><br><span class="line"><span class="comment">// 代码片段8</span></span><br></pre></td></tr></table></figure></p><h4 id="3-2-2、MyBatis的映射文件"><a href="#3-2-2、MyBatis的映射文件" class="headerlink" title="3.2.2、MyBatis的映射文件"></a>3.2.2、MyBatis的映射文件</h4><p>接下来是MyBatis的映射文件代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">"selectBirthdayNotAcrossYear"</span> parameterType=<span class="string">"com.savor.security.common.entity.PageExample"</span> resultMap=<span class="string">"BaseResultMap"</span>&gt;</span><br><span class="line">    SELECT</span><br><span class="line">    t.*, y.position_name</span><br><span class="line">    FROM</span><br><span class="line">    m_employee_info t</span><br><span class="line">    LEFT JOIN m_position y ON t.position_id = y.position_id</span><br><span class="line">    WHERE</span><br><span class="line">    t.employee_id IS NOT NULL</span><br><span class="line">    &lt;<span class="keyword">if</span> test=<span class="string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span>&gt;</span><br><span class="line">        AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #&#123;data.startDataBirthdayPoint&#125; AND #&#123;data.endDataBirthdayPoint&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">-- 代码片段<span class="number">9</span></span><br></pre></td></tr></table></figure></p><p>跨年的请求处理，跟上面的代码没有区别，不同之处体现在最后的映射文件这里：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">"selectByBirthday"</span> parameterType=<span class="string">"com.savor.security.common.entity.PageExample"</span> resultMap=<span class="string">"BaseResultMap"</span>&gt;</span><br><span class="line">    select a.* from (</span><br><span class="line">    SELECT</span><br><span class="line">    t.*, y.position_name</span><br><span class="line">    FROM</span><br><span class="line">    m_employee_info t</span><br><span class="line">    LEFT JOIN m_position y ON t.position_id = y.position_id</span><br><span class="line">    WHERE</span><br><span class="line">    t.employee_id IS NOT NULL</span><br><span class="line">    &lt;<span class="keyword">if</span> test=<span class="string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span>&gt;</span><br><span class="line">        AND DATE_FORMAT(t.employee_birthday , '%m%d') BETWEEN #&#123;data.startDataBirthdayPoint&#125; AND #&#123;data.endDataBirthdayPoint&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    UNION ALL</span><br><span class="line">    SELECT</span><br><span class="line">    t.*, y.position_name</span><br><span class="line">    FROM</span><br><span class="line">    m_employee_info t</span><br><span class="line">    LEFT JOIN m_position y ON t.position_id = y.position_id</span><br><span class="line">    WHERE</span><br><span class="line">    t.employee_id IS NOT NULL</span><br><span class="line">    &lt;<span class="keyword">if</span> test=<span class="string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span>&gt;</span><br><span class="line">        <span class="function">AND <span class="title">DATE_FORMAT</span><span class="params">(t.employee_birthday , <span class="string">'%m%d'</span>)</span> BETWEEN #</span>&#123;data.startDataBirthdayPoint&#125; AND <span class="string">'1231'</span></span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    UNION ALL</span><br><span class="line">    SELECT</span><br><span class="line">    t.*, y.position_name</span><br><span class="line">    FROM</span><br><span class="line">    m_employee_info t</span><br><span class="line">    LEFT JOIN m_position y ON t.position_id = y.position_id</span><br><span class="line">    WHERE</span><br><span class="line">    t.employee_id IS NOT NULL</span><br><span class="line">    &lt;<span class="keyword">if</span> test=<span class="string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span>&gt;</span><br><span class="line">        <span class="function">AND <span class="title">DATE_FORMAT</span><span class="params">(t.employee_birthday , <span class="string">'%m%d'</span>)</span> BETWEEN '0101' AND #</span>&#123;data.endDataBirthdayPoint&#125;</span><br><span class="line">    &lt;/if&gt;</span><br><span class="line">    ) as a</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p><p>其中也分成了三段，第一段就是正常的输入日期，但是不会去调用了。<br>后两段是：<br>如果跨年的时候，比如选择这个时间段2018-12-05~2019-03-15进行查询，那么数据流到映射文件这里的时候，会被分成两段（因为生日是考虑月日的，不考虑年）：就是12-05~12-31一部分人；01-01~03-15第二部分人；最后加起来，就是要的人数；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;1、概要&quot;&gt;&lt;a href=&quot;#1、概要&quot; class=&quot;headerlink&quot; title=&quot;1、概要&quot;&gt;&lt;/a&gt;1、概要&lt;/h3&gt;&lt;p&gt;生日跨年提醒，在EHR系统中，用户选择某个时间段都那些人过生日，并发送邮件提醒；本文只描
      
    
    </summary>
    
    
      <category term="Spring Cloud" scheme="https://youxiu.net/tags/Spring-Cloud/"/>
    
  </entry>
  
</feed>
