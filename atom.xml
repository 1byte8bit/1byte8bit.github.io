<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>1BYTE8BIT</title>
  
  <subtitle>1byte = 8bit</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://1byte8bit.com/"/>
  <updated>2018-12-25T12:07:17.447Z</updated>
  <id>https://1byte8bit.com/</id>
  
  <author>
    <name>腰静</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>后端开发之微服务开发遇到的问题和总结</title>
    <link href="https://1byte8bit.com/2018/12/19/server-spring-cloud-qa-and-summary/"/>
    <id>https://1byte8bit.com/2018/12/19/server-spring-cloud-qa-and-summary/</id>
    <published>2018-12-19T00:26:48.000Z</published>
    <updated>2018-12-25T12:07:17.447Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>微服务开发中基础知识整理和技巧整理。</p><h3 id="生日跨年查询"><a href="#生日跨年查询" class="headerlink" title="生日跨年查询"></a>生日跨年查询</h3><p>代码：</p><pre class=" language-java"><code class="language-java">    <span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">"selectByBirthday"</span> parameterType<span class="token operator">=</span><span class="token string">"com.savor.security.common.entity.PageExample"</span> resultMap<span class="token operator">=</span><span class="token string">"BaseResultMap"</span><span class="token operator">></span>        select a<span class="token punctuation">.</span>* <span class="token function">from</span> <span class="token punctuation">(</span>        SELECT        t<span class="token punctuation">.</span>*<span class="token punctuation">,</span> y<span class="token punctuation">.</span>position_name        FROM        m_employee_info t        LEFT JOIN m_position y ON t<span class="token punctuation">.</span>position_id <span class="token operator">=</span> y<span class="token punctuation">.</span>position_id        WHERE        t<span class="token punctuation">.</span>employee_id IS NOT NULL        <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span><span class="token operator">></span>            AND <span class="token function">DATE_FORMAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span> <span class="token string">'%m%d'</span><span class="token punctuation">)</span> BETWEEN #<span class="token punctuation">{</span>data<span class="token punctuation">.</span>startDataBirthdayPoint<span class="token punctuation">}</span> AND #<span class="token punctuation">{</span>data<span class="token punctuation">.</span>endDataBirthdayPoint<span class="token punctuation">}</span>        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>        UNION ALL        SELECT        t<span class="token punctuation">.</span>*<span class="token punctuation">,</span> y<span class="token punctuation">.</span>position_name        FROM        m_employee_info t        LEFT JOIN m_position y ON t<span class="token punctuation">.</span>position_id <span class="token operator">=</span> y<span class="token punctuation">.</span>position_id        WHERE        t<span class="token punctuation">.</span>employee_id IS NOT NULL        <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span><span class="token operator">></span>            AND <span class="token function">DATE_FORMAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span> <span class="token string">'%m%d'</span><span class="token punctuation">)</span> BETWEEN #<span class="token punctuation">{</span>data<span class="token punctuation">.</span>startDataBirthdayPoint<span class="token punctuation">}</span> AND <span class="token string">'1231'</span>        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>        UNION ALL        SELECT        t<span class="token punctuation">.</span>*<span class="token punctuation">,</span> y<span class="token punctuation">.</span>position_name        FROM        m_employee_info t        LEFT JOIN m_position y ON t<span class="token punctuation">.</span>position_id <span class="token operator">=</span> y<span class="token punctuation">.</span>position_id        WHERE        t<span class="token punctuation">.</span>employee_id IS NOT NULL        <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"data.startDataBirthdayPoint != null and data.startDataBirthdayPoint != '' and data.endDataBirthdayPoint != null and data.endDataBirthdayPoint !=''"</span><span class="token operator">></span>            AND <span class="token function">DATE_FORMAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span> <span class="token string">'%m%d'</span><span class="token punctuation">)</span> BETWEEN <span class="token string">'0101'</span> AND #<span class="token punctuation">{</span>data<span class="token punctuation">.</span>endDataBirthdayPoint<span class="token punctuation">}</span>        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>        <span class="token punctuation">)</span> as a    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code></pre><ul><li>查询生日，将年份截取，只传入月和日。</li><li>在跨年处理的时候，需要将时间截断一下。开始的时间到1231，作为一个阶段，从0101到终止的时间，作为第二个阶段。<h6 id="有第二种方法但是不推荐这样写"><a href="#有第二种方法但是不推荐这样写" class="headerlink" title="有第二种方法但是不推荐这样写"></a>有第二种方法但是不推荐这样写</h6></li></ul><pre class=" language-java"><code class="language-java">SELECT    <span class="token operator">*</span>FROM    m_employee_info t<span class="token function">WHERE</span><span class="token punctuation">(</span><span class="token function">date_add</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span>INTERVAL <span class="token function">TIMESTAMPDIFF</span><span class="token punctuation">(</span>YEAR <span class="token punctuation">,</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span><span class="token function">DATE_FORMAT</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> YEAR<span class="token punctuation">)</span><span class="token punctuation">)</span>    BETWEEN <span class="token string">'2018-12-01'</span> AND <span class="token string">'2019-01-15'</span><span class="token function">OR</span><span class="token punctuation">(</span><span class="token function">date_add</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span>INTERVAL <span class="token function">TIMESTAMPDIFF</span><span class="token punctuation">(</span>YEAR <span class="token punctuation">,</span>t<span class="token punctuation">.</span>employee_birthday <span class="token punctuation">,</span><span class="token function">DATE_FORMAT</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span> YEAR<span class="token punctuation">)</span><span class="token punctuation">)</span>    BETWEEN <span class="token string">'2018-12-01'</span> AND <span class="token string">'2019-01-15'</span>`</code></pre><ul><li><p><code>上述代码使用Navicat的Beautify SQL功能美化整理</code></p></li><li><p>也能实现跨年查询，还需要另外加一部分</p></li><li>这样的问题是函数比较多，每次将所有的用户的生日全部改成查询起始时间点的所在年份，如果人多，性能会比较低。</li></ul><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;微服务开发中基础知识整理和技巧整理。&lt;/p&gt;
&lt;h3 id=&quot;生日跨年查询&quot;&gt;&lt;a href=&quot;#生日跨年查询&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="Spring Cloud" scheme="https://1byte8bit.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>前端开发Vue.js问题整理与总结</title>
    <link href="https://1byte8bit.com/2018/12/18/front-vue-js-qa-and-summary/"/>
    <id>https://1byte8bit.com/2018/12/18/front-vue-js-qa-and-summary/</id>
    <published>2018-12-18T05:37:16.000Z</published>
    <updated>2018-12-25T11:42:00.465Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul><li>所在的项目上前端开发使用技术栈为Vue.js。</li><li>本文的主要内容开发时候遇到的问题、解决的方案、常用的解决方法。</li><li>思路。</li></ul><h3 id="测试代码高亮"><a href="#测试代码高亮" class="headerlink" title="测试代码高亮"></a>测试代码高亮</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 简单语法</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'props-demo-simple'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">,</span> <span class="token string">'myMessage'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 对象语法，提供校验</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'props-demo-advanced'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 检测类型</span>    height<span class="token punctuation">:</span> Number<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 检测类型 + 其他验证</span>    age<span class="token punctuation">:</span> <span class="token punctuation">{</span>      type<span class="token punctuation">:</span> Number<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      validator<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> value <span class="token operator">>=</span> <span class="token number">0</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 id="困扰多次的组件弹窗问题"><a href="#困扰多次的组件弹窗问题" class="headerlink" title="困扰多次的组件弹窗问题"></a>困扰多次的组件弹窗问题</h3><ul><li>原因:主要原因是没理解弹窗的原理。写的时候没有按照步骤和关键点进行。</li></ul><h3 id="JavaScript-数据结构的理解"><a href="#JavaScript-数据结构的理解" class="headerlink" title="JavaScript 数据结构的理解"></a>JavaScript 数据结构的理解</h3><ul><li>对JavaScript数组的理解不熟悉。</li><li>对返回的数据做不出明确的判断来。</li></ul><p>###</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;所在的项目上前端开发使用技术栈为Vue.js。&lt;/li&gt;
&lt;li&gt;本文的主要内容开发时候遇到的问题、解决的方案、常用的解决方法。
      
    
    </summary>
    
    
      <category term="Vue.js" scheme="https://1byte8bit.com/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>微服务模块的理解</title>
    <link href="https://1byte8bit.com/2018/12/17/micro-service/"/>
    <id>https://1byte8bit.com/2018/12/17/micro-service/</id>
    <published>2018-12-17T06:16:51.000Z</published>
    <updated>2018-12-17T06:57:12.978Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目微服务结构整体理解"><a href="#项目微服务结构整体理解" class="headerlink" title="项目微服务结构整体理解"></a>项目微服务结构整体理解</h2><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><ul><li>各司其职、集中管理、存在单向或多向调用关系；</li></ul><h4 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h4><ul><li>提高迭代效率；</li><li>降低开发黏连性；</li><li>节约成本</li></ul><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><h5 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h5><ul><li>项目启动的入口<code>CenterBootstrap</code><ul><li>各项服务的注册、管理中心。</li><li>微服务请求转发。</li></ul></li><li>鉴权（权限）服务<code>AuthBootstrap</code><ul><li><code>JWT</code>处理权限</li></ul></li><li>字典服务<code>DictBootstrap</code><ul><li>管理项目的数据字典。</li></ul></li><li>后台管理服务<code>AdminBootstrap</code><ul><li>连接数据库、处理数据。</li></ul></li><li>网关服务<code>GateBootstrap</code><ul><li>接收前端的请求并转发至其他服务。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;项目微服务结构整体理解&quot;&gt;&lt;a href=&quot;#项目微服务结构整体理解&quot; class=&quot;headerlink&quot; title=&quot;项目微服务结构整体理解&quot;&gt;&lt;/a&gt;项目微服务结构整体理解&lt;/h2&gt;&lt;h4 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="微服务" scheme="https://1byte8bit.com/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发基础之学习Objective-C笔记一</title>
    <link href="https://1byte8bit.com/2018/12/11/ios-init-oc-lang/"/>
    <id>https://1byte8bit.com/2018/12/11/ios-init-oc-lang/</id>
    <published>2018-12-11T13:11:22.000Z</published>
    <updated>2018-12-18T05:12:10.984Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><ul><li>学习一门新的手艺。</li><li>做个小的Demo，解决自己对于现有的某些工具不能满足自己需求的痛点。</li><li>Apple Store一些应用需要花钱。</li></ul><h5 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h5><ul><li>第一、先看书。重点关注一下指针这块。</li><li>第二、照着实例写一写UI。画一画界面。</li><li>第三、写一写后台的逻辑。实现一些小的功能。</li><li>第四、整合记录一下笔记和发布一下源码。提升一下。</li><li>第五、规划一个tools的功能，写计划书，准备开发。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;h5 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h5&gt;&lt;ul&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Objective-C" scheme="https://1byte8bit.com/tags/Objective-C/"/>
    
  </entry>
  
</feed>
